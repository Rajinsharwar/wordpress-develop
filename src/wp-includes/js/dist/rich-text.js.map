{"version":3,"file":"rich-text.js","mappings":"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A;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA,WAAW,GAAG;AACd,WAAW,gBAAgB;AAC3B;AACA;AACA,6BAAe,oCAAU;AACzB,YAAY,cAAc;AAC1B;;AAEA,YAAY,eAAe;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;;;;;;UCvSA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA","sources":["webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/apply-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/format-edit.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-anchor-ref.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-anchor.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-boundary-style.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-copy-handler.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-default-style.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-delete.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-format-boundaries.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-input-and-selection.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-select-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-selection-change-compat.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/concat.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create-element.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-formats.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-text-content.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert-line-separator.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-collapsed.ts","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-empty.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-format-equal.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-range-equal.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/join.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/normalise-formats.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/register-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove-line-separator.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/replace.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/slice.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/special-characters.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/split.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/actions.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/reducer.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/selectors.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-dom.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-html-string.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-tree.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/toggle-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/unregister-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/update-formats.js","webpack://wp/external window [\"wp\",\"a11y\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"escapeHtml\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/./node_modules/rememo/rememo.js","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/index.ts"],"sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\nfunction replace( array, index, value ) {\n\tarray = array.slice();\n\tarray[ index ] = value;\n\treturn array;\n}\n\n/**\n * Apply a format object to a Rich Text value from the given `startIndex` to the\n * given `endIndex`. Indices are retrieved from the selection if none are\n * provided.\n *\n * @param {RichTextValue}  value        Value to modify.\n * @param {RichTextFormat} format       Format to apply.\n * @param {number}         [startIndex] Start index.\n * @param {number}         [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the format applied.\n */\nexport function applyFormat(\n\tvalue,\n\tformat,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// The selection is collapsed.\n\tif ( startIndex === endIndex ) {\n\t\tconst startFormat = newFormats[ startIndex ]?.find(\n\t\t\t( { type } ) => type === format.type\n\t\t);\n\n\t\t// If the caret is at a format of the same type, expand start and end to\n\t\t// the edges of the format. This is useful to apply new attributes.\n\t\tif ( startFormat ) {\n\t\t\tconst index = newFormats[ startIndex ].indexOf( startFormat );\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ startIndex ] &&\n\t\t\t\tnewFormats[ startIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ startIndex ] = replace(\n\t\t\t\t\tnewFormats[ startIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ endIndex ] &&\n\t\t\t\tnewFormats[ endIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ endIndex ] = replace(\n\t\t\t\t\tnewFormats[ endIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Determine the highest position the new format can be inserted at.\n\t\tlet position = +Infinity;\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tif ( newFormats[ index ] ) {\n\t\t\t\tnewFormats[ index ] = newFormats[ index ].filter(\n\t\t\t\t\t( { type } ) => type !== format.type\n\t\t\t\t);\n\n\t\t\t\tconst length = newFormats[ index ].length;\n\n\t\t\t\tif ( length < position ) {\n\t\t\t\t\tposition = length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewFormats[ index ] = [];\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tnewFormats[ index ].splice( position, 0, format );\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\t// Always revise active formats. This serves as a placeholder for new\n\t\t// inputs with the format so new input appears with the format applied,\n\t\t// and ensures a format of the same type uses the latest values.\n\t\tactiveFormats: [\n\t\t\t...( activeFormats?.filter(\n\t\t\t\t( { type } ) => type !== format.type\n\t\t\t) || [] ),\n\t\t\tformat,\n\t\t],\n\t} );\n}\n","/**\n * Internal dependencies\n */\nimport { getActiveFormat } from '../get-active-format';\nimport { getActiveObject } from '../get-active-object';\n\nexport default function FormatEdit( {\n\tformatTypes,\n\tonChange,\n\tonFocus,\n\tvalue,\n\tforwardedRef,\n} ) {\n\treturn formatTypes.map( ( settings ) => {\n\t\tconst { name, edit: Edit } = settings;\n\n\t\tif ( ! Edit ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activeFormat = getActiveFormat( value, name );\n\t\tconst isActive = activeFormat !== undefined;\n\t\tconst activeObject = getActiveObject( value );\n\t\tconst isObjectActive =\n\t\t\tactiveObject !== undefined && activeObject.type === name;\n\n\t\treturn (\n\t\t\t<Edit\n\t\t\t\tkey={ name }\n\t\t\t\tisActive={ isActive }\n\t\t\t\tactiveAttributes={\n\t\t\t\t\tisActive ? activeFormat.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tisObjectActive={ isObjectActive }\n\t\t\t\tactiveObjectAttributes={\n\t\t\t\t\tisObjectActive ? activeObject.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t\tonFocus={ onFocus }\n\t\t\t\tcontentRef={ forwardedRef }\n\t\t\t/>\n\t\t);\n\t} );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useCopyHandler } from './use-copy-handler';\nimport { useFormatBoundaries } from './use-format-boundaries';\nimport { useSelectObject } from './use-select-object';\nimport { useInputAndSelection } from './use-input-and-selection';\nimport { useSelectionChangeCompat } from './use-selection-change-compat';\nimport { useDelete } from './use-delete';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tpreserveWhiteSpace,\n\tonSelectionChange,\n\tonChange,\n\t__unstableMultilineTag: multilineTag,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tif ( disableFormats ) {\n\t\t\trecord.current.formats = Array( value.length );\n\t\t\trecord.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecord.current.formats = __unstableAfterParse( record.current );\n\t\t}\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdate = useRef( false );\n\n\tif ( ! record.current ) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\tsetRecordFromProps();\n\t\t// Sometimes formats are added programmatically and we need to make\n\t\t// sure it's persisted to the block store / markup. If these formats\n\t\t// are not applied, they could cause inconsistencies between the data\n\t\t// in the visual editor and the frontend. Right now, it's only relevant\n\t\t// to the `core/text-color` format, which is applied at runtime in\n\t\t// certain circunstances. See the `__unstableFilterAttributeValue`\n\t\t// function in `packages/format-library/src/text-color/index.js`.\n\t\t// @todo find a less-hacky way of solving this.\n\n\t\tconst hasRelevantInitFormat =\n\t\t\trecord.current?.formats[ 0 ]?.[ 0 ]?.type === 'core/text-color';\n\n\t\tif ( hasRelevantInitFormat ) {\n\t\t\thandleChangesUponInit( record.current );\n\t\t}\n\t} else if (\n\t\tselectionStart !== record.current.start ||\n\t\tselectionEnd !== record.current.end\n\t) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\trecord.current = {\n\t\t\t...record.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecord.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_value.current = newRecord.text;\n\t\t} else {\n\t\t\t_value.current = toHTMLString( {\n\t\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t\t  }\n\t\t\t\t\t: newRecord,\n\t\t\t\tmultilineTag,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t}\n\n\t\tconst { start, end, formats, text } = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction handleChangesUponInit( newRecord ) {\n\t\trecord.current = newRecord;\n\n\t\t_value.current = toHTMLString( {\n\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t? {\n\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t  }\n\t\t\t\t: newRecord,\n\t\t\tmultilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\tconst { formats, text } = newRecord;\n\n\t\tregistry.batch( () => {\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyFromProps();\n\t\thadSelectionUpdate.current = false;\n\t}, [ hadSelectionUpdate.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record } ),\n\t\tuseCopyHandler( { record, multilineTag, preserveWhiteSpace } ),\n\t\tuseSelectObject(),\n\t\tuseFormatBoundaries( { record, applyRecord } ),\n\t\tuseDelete( {\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tmultilineTag,\n\t\t} ),\n\t\tuseInputAndSelection( {\n\t\t\trecord,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t} ),\n\t\tuseSelectionChangeCompat(),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMount.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: record.current,\n\t\t// A function to get the most recent value so event handlers in\n\t\t// useRichText implementations have access to it. For example when\n\t\t// listening to input events, we internally update the state, but this\n\t\t// state is not yet available to the input event handler because React\n\t\t// may re-render asynchronously.\n\t\tgetValue: () => record.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n","/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { getActiveFormat } from '../get-active-format';\n\n/**\n * @template T\n * @typedef {import('@wordpress/element').RefObject<T>} RefObject<T>\n */\n/** @typedef {import('../register-format-type').WPFormat} WPFormat */\n/** @typedef {import('../types').RichTextValue} RichTextValue */\n\n/**\n * This hook, to be used in a format type's Edit component, returns the active\n * element that is formatted, or the selection range if no format is active.\n * The returned value is meant to be used for positioning UI, e.g. by passing it\n * to the `Popover` component.\n *\n * @param {Object}                 $1          Named parameters.\n * @param {RefObject<HTMLElement>} $1.ref      React ref of the element\n *                                             containing  the editable content.\n * @param {RichTextValue}          $1.value    Value to check for selection.\n * @param {WPFormat}               $1.settings The format type's settings.\n *\n * @return {Element|Range} The active element or selection range.\n */\nexport function useAnchorRef( { ref, value, settings = {} } ) {\n\tdeprecated( '`useAnchorRef` hook', {\n\t\tsince: '6.1',\n\t\talternative: '`useAnchor` hook',\n\t} );\n\n\tconst { tagName, className, name } = settings;\n\tconst activeFormat = name ? getActiveFormat( value, name ) : undefined;\n\n\treturn useMemo( () => {\n\t\tif ( ! ref.current ) return;\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\n\t\tif ( ! selection.rangeCount ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst range = selection.getRangeAt( 0 );\n\n\t\tif ( ! activeFormat ) {\n\t\t\treturn range;\n\t\t}\n\n\t\tlet element = range.startContainer;\n\n\t\t// If the caret is right before the element, select the next element.\n\t\telement = element.nextElementSibling || element;\n\n\t\twhile ( element.nodeType !== element.ELEMENT_NODE ) {\n\t\t\telement = element.parentNode;\n\t\t}\n\n\t\treturn element.closest(\n\t\t\ttagName + ( className ? '.' + className : '' )\n\t\t);\n\t}, [ activeFormat, value.start, value.end, tagName, className ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useState, useLayoutEffect } from '@wordpress/element';\n\n/** @typedef {import('../register-format-type').WPFormat} WPFormat */\n/** @typedef {import('../types').RichTextValue} RichTextValue */\n\n/**\n * Given a range and a format tag name and class name, returns the closest\n * format element.\n *\n * @param {Range}       range                  The Range to check.\n * @param {HTMLElement} editableContentElement The editable wrapper.\n * @param {string}      tagName                The tag name of the format element.\n * @param {string}      className              The class name of the format element.\n *\n * @return {HTMLElement|undefined} The format element, if found.\n */\nfunction getFormatElement( range, editableContentElement, tagName, className ) {\n\tlet element = range.startContainer;\n\n\t// If the caret is right before the element, select the next element.\n\telement = element.nextElementSibling || element;\n\n\tif ( element.nodeType !== element.ELEMENT_NODE ) {\n\t\telement = element.parentElement;\n\t}\n\n\tif ( ! element ) return;\n\tif ( element === editableContentElement ) return;\n\tif ( ! editableContentElement.contains( element ) ) return;\n\n\tconst selector = tagName + ( className ? '.' + className : '' );\n\n\t// .closest( selector ), but with a boundary. Check if the element matches\n\t// the selector. If it doesn't match, try the parent element if it's not the\n\t// editable wrapper. We don't want to try to match ancestors of the editable\n\t// wrapper, which is what .closest( selector ) would do. When the element is\n\t// the editable wrapper (which is most likely the case because most text is\n\t// unformatted), this never runs.\n\twhile ( element !== editableContentElement ) {\n\t\tif ( element.matches( selector ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\telement = element.parentElement;\n\t}\n}\n\n/**\n * @typedef {Object} VirtualAnchorElement\n * @property {() => DOMRect} getBoundingClientRect A function returning a DOMRect\n * @property {Document}      ownerDocument         The element's ownerDocument\n */\n\n/**\n * Creates a virtual anchor element for a range.\n *\n * @param {Range}       range                  The range to create a virtual anchor element for.\n * @param {HTMLElement} editableContentElement The editable wrapper.\n *\n * @return {VirtualAnchorElement} The virtual anchor element.\n */\nfunction createVirtualAnchorElement( range, editableContentElement ) {\n\treturn {\n\t\townerDocument: range.startContainer.ownerDocument,\n\t\tgetBoundingClientRect() {\n\t\t\treturn editableContentElement.contains( range.startContainer )\n\t\t\t\t? range.getBoundingClientRect()\n\t\t\t\t: editableContentElement.getBoundingClientRect();\n\t\t},\n\t};\n}\n\n/**\n * Get the anchor: a format element if there is a matching one based on the\n * tagName and className or a range otherwise.\n *\n * @param {HTMLElement} editableContentElement The editable wrapper.\n * @param {string}      tagName                The tag name of the format\n *                                             element.\n * @param {string}      className              The class name of the format\n *                                             element.\n *\n * @return {HTMLElement|VirtualAnchorElement|undefined} The anchor.\n */\nfunction getAnchor( editableContentElement, tagName, className ) {\n\tif ( ! editableContentElement ) return;\n\n\tconst { ownerDocument } = editableContentElement;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\n\tif ( ! selection ) return;\n\tif ( ! selection.rangeCount ) return;\n\n\tconst range = selection.getRangeAt( 0 );\n\n\tif ( ! range || ! range.startContainer ) return;\n\n\tconst formatElement = getFormatElement(\n\t\trange,\n\t\teditableContentElement,\n\t\ttagName,\n\t\tclassName\n\t);\n\n\tif ( formatElement ) return formatElement;\n\n\treturn createVirtualAnchorElement( range, editableContentElement );\n}\n\n/**\n * This hook, to be used in a format type's Edit component, returns the active\n * element that is formatted, or a virtual element for the selection range if\n * no format is active. The returned value is meant to be used for positioning\n * UI, e.g. by passing it to the `Popover` component via the `anchor` prop.\n *\n * @param {Object}           $1                        Named parameters.\n * @param {HTMLElement|null} $1.editableContentElement The element containing\n *                                                     the editable content.\n * @param {WPFormat=}        $1.settings               The format type's settings.\n * @return {Element|VirtualAnchorElement|undefined|null} The active element or selection range.\n */\nexport function useAnchor( { editableContentElement, settings = {} } ) {\n\tconst { tagName, className } = settings;\n\tconst [ anchor, setAnchor ] = useState( () =>\n\t\tgetAnchor( editableContentElement, tagName, className )\n\t);\n\n\tuseLayoutEffect( () => {\n\t\tif ( ! editableContentElement ) return;\n\n\t\tconst { ownerDocument } = editableContentElement;\n\n\t\tfunction callback() {\n\t\t\tsetAnchor(\n\t\t\t\tgetAnchor( editableContentElement, tagName, className )\n\t\t\t);\n\t\t}\n\n\t\tfunction attach() {\n\t\t\townerDocument.addEventListener( 'selectionchange', callback );\n\t\t}\n\n\t\tfunction detach() {\n\t\t\townerDocument.removeEventListener( 'selectionchange', callback );\n\t\t}\n\n\t\tif ( editableContentElement === ownerDocument.activeElement ) {\n\t\t\tattach();\n\t\t}\n\n\t\teditableContentElement.addEventListener( 'focusin', attach );\n\t\teditableContentElement.addEventListener( 'focusout', detach );\n\n\t\treturn detach;\n\t}, [ editableContentElement, tagName, className ] );\n\n\treturn anchor;\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\n/*\n * Calculates and renders the format boundary style when the active formats\n * change.\n */\nexport function useBoundaryStyle( { record } ) {\n\tconst ref = useRef();\n\tconst { activeFormats = [], replacements, start } = record.current;\n\tconst activeReplacement = replacements[ start ];\n\tuseEffect( () => {\n\t\t// There's no need to recalculate the boundary styles if no formats are\n\t\t// active, because no boundary styles will be visible.\n\t\tif (\n\t\t\t( ! activeFormats || ! activeFormats.length ) &&\n\t\t\t! activeReplacement\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundarySelector = '*[data-rich-text-format-boundary]';\n\t\tconst element = ref.current.querySelector( boundarySelector );\n\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst computedStyle = defaultView.getComputedStyle( element );\n\t\tconst newColor = computedStyle.color\n\t\t\t.replace( ')', ', 0.2)' )\n\t\t\t.replace( 'rgb', 'rgba' );\n\t\tconst selector = `.rich-text:focus ${ boundarySelector }`;\n\t\tconst rule = `background-color: ${ newColor }`;\n\t\tconst style = `${ selector } {${ rule }}`;\n\t\tconst globalStyleId = 'rich-text-boundary-style';\n\n\t\tlet globalStyle = ownerDocument.getElementById( globalStyleId );\n\n\t\tif ( ! globalStyle ) {\n\t\t\tglobalStyle = ownerDocument.createElement( 'style' );\n\t\t\tglobalStyle.id = globalStyleId;\n\t\t\townerDocument.head.appendChild( globalStyle );\n\t\t}\n\n\t\tif ( globalStyle.innerHTML !== style ) {\n\t\t\tglobalStyle.innerHTML = style;\n\t\t}\n\t}, [ activeFormats, activeReplacement ] );\n\treturn ref;\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { toHTMLString } from '../to-html-string';\nimport { isCollapsed } from '../is-collapsed';\nimport { slice } from '../slice';\nimport { getTextContent } from '../get-text-content';\n\nexport function useCopyHandler( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onCopy( event ) {\n\t\t\tconst { record, multilineTag, preserveWhiteSpace } =\n\t\t\t\tpropsRef.current;\n\t\t\tconst { ownerDocument } = element;\n\t\t\tif (\n\t\t\t\tisCollapsed( record.current ) ||\n\t\t\t\t! element.contains( ownerDocument.activeElement )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectedRecord = slice( record.current );\n\t\t\tconst plainText = getTextContent( selectedRecord );\n\t\t\tconst html = toHTMLString( {\n\t\t\t\tvalue: selectedRecord,\n\t\t\t\tmultilineTag,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t\tevent.clipboardData.setData( 'text/plain', plainText );\n\t\t\tevent.clipboardData.setData( 'text/html', html );\n\t\t\tevent.clipboardData.setData( 'rich-text', 'true' );\n\t\t\tevent.clipboardData.setData(\n\t\t\t\t'rich-text-multi-line-tag',\n\t\t\t\tmultilineTag || ''\n\t\t\t);\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.type === 'cut' ) {\n\t\t\t\townerDocument.execCommand( 'delete' );\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'copy', onCopy );\n\t\telement.addEventListener( 'cut', onCopy );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'copy', onCopy );\n\t\t\telement.removeEventListener( 'cut', onCopy );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * A minimum width of 1px will prevent the rich text container from collapsing\n * to 0 width and hiding the caret. This is useful for inline containers.\n */\nconst minWidth = '1px';\n\nexport function useDefaultStyle() {\n\treturn useCallback( ( element ) => {\n\t\tif ( ! element ) return;\n\t\telement.style.whiteSpace = whiteSpace;\n\t\telement.style.minWidth = minWidth;\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { BACKSPACE, DELETE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { remove } from '../remove';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isEmptyLine } from '../is-empty';\n\nexport function useDelete( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode } = event;\n\t\t\tconst { createRecord, handleChange, multilineTag } =\n\t\t\t\tpropsRef.current;\n\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( keyCode !== DELETE && keyCode !== BACKSPACE ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentValue = createRecord();\n\t\t\tconst { start, end, text } = currentValue;\n\t\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t\t// Always handle full content deletion ourselves.\n\t\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\t\thandleChange( remove( currentValue ) );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( multilineTag ) {\n\t\t\t\tlet newValue;\n\n\t\t\t\t// Check to see if we should remove the first item if empty.\n\t\t\t\tif (\n\t\t\t\t\tisReverse &&\n\t\t\t\t\tcurrentValue.start === 0 &&\n\t\t\t\t\tcurrentValue.end === 0 &&\n\t\t\t\t\tisEmptyLine( currentValue )\n\t\t\t\t) {\n\t\t\t\t\tnewValue = removeLineSeparator( currentValue, ! isReverse );\n\t\t\t\t} else {\n\t\t\t\t\tnewValue = removeLineSeparator( currentValue, isReverse );\n\t\t\t\t}\n\n\t\t\t\tif ( newValue ) {\n\t\t\t\t\thandleChange( newValue );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef, useReducer } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../is-collapsed';\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nexport function useFormatBoundaries( props ) {\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\t\tif (\n\t\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\t\tshiftKey ||\n\t\t\t\taltKey ||\n\t\t\t\tmetaKey ||\n\t\t\t\tctrlKey ||\n\t\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { record, applyRecord } = propsRef.current;\n\t\t\tconst {\n\t\t\t\ttext,\n\t\t\t\tformats,\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t\t} = record.current;\n\t\t\tconst collapsed = isCollapsed( record.current );\n\t\t\tconst { ownerDocument } = element;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\t// To do: ideally, we should look at visual position instead.\n\t\t\tconst { direction } = defaultView.getComputedStyle( element );\n\t\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t\t// navigating backward.\n\t\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t\t// navigating forward.\n\t\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t\t// the selection for now. Later we could expand this logic to set\n\t\t\t// boundary positions if needed.\n\t\t\tif ( ! collapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\t\t\tconst destination = isReverse ? formatsBefore : formatsAfter;\n\t\t\tconst isIncreasing = currentActiveFormats.every(\n\t\t\t\t( format, index ) => format === destination[ index ]\n\t\t\t);\n\n\t\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\n\t\t\tif ( ! isIncreasing ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t} else if ( newActiveFormatsLength < destination.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( newActiveFormatsLength === currentActiveFormats.length ) {\n\t\t\t\trecord.current._newActiveFormats = destination;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconst origin = isReverse ? formatsAfter : formatsBefore;\n\t\t\tconst source = isIncreasing ? destination : origin;\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = {\n\t\t\t\t...record.current,\n\t\t\t\tactiveFormats: newActiveFormats,\n\t\t\t};\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue );\n\t\t\tforceRender();\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nconst PLACEHOLDER_ATTR_NAME = 'data-rich-text-placeholder';\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.hasAttribute( PLACEHOLDER_ATTR_NAME )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nexport function useInputAndSelection( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\tlet isComposing = false;\n\n\t\tfunction onInput( event ) {\n\t\t\t// Do not trigger a change if characters are being composed.\n\t\t\t// Browsers  will usually emit a final `input` event when the\n\t\t\t// characters are composed.\n\t\t\t// As of December 2019, Safari doesn't support\n\t\t\t// nativeEvent.isComposing.\n\t\t\tif ( isComposing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet inputType;\n\n\t\t\tif ( event ) {\n\t\t\t\tinputType = event.inputType;\n\t\t\t}\n\n\t\t\tconst { record, applyRecord, createRecord, handleChange } =\n\t\t\t\tpropsRef.current;\n\n\t\t\t// The browser formatted something or tried to insert HTML.\n\t\t\t// Overwrite it. It will be handled later by the format library if\n\t\t\t// needed.\n\t\t\tif (\n\t\t\t\tinputType &&\n\t\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t\t) {\n\t\t\t\tapplyRecord( record.current );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentValue = createRecord();\n\t\t\tconst { start, activeFormats: oldActiveFormats = [] } =\n\t\t\t\trecord.current;\n\n\t\t\t// Update the formats between the last and new caret position.\n\t\t\tconst change = updateFormats( {\n\t\t\t\tvalue: currentValue,\n\t\t\t\tstart,\n\t\t\t\tend: currentValue.start,\n\t\t\t\tformats: oldActiveFormats,\n\t\t\t} );\n\n\t\t\thandleChange( change );\n\t\t}\n\n\t\t/**\n\t\t * Syncs the selection to local state. A callback for the\n\t\t * `selectionchange` event.\n\t\t */\n\t\tfunction handleSelectionChange() {\n\t\t\tconst { record, applyRecord, createRecord, onSelectionChange } =\n\t\t\t\tpropsRef.current;\n\n\t\t\t// Check if the implementor disabled editing. `contentEditable`\n\t\t\t// does disable input, but not text selection, so we must ignore\n\t\t\t// selection changes.\n\t\t\tif ( element.contentEditable !== 'true' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the selection changes where the active element is a parent of\n\t\t\t// the rich text instance (writing flow), call `onSelectionChange`\n\t\t\t// for the rich text instance that contains the start or end of the\n\t\t\t// selection.\n\t\t\tif ( ownerDocument.activeElement !== element ) {\n\t\t\t\t// Only process if the active elment is contentEditable, either\n\t\t\t\t// this rich text instance or the writing flow parent. Fixes a\n\t\t\t\t// bug in Firefox where it strangely selects the closest\n\t\t\t\t// contentEditable element, even though the click was outside\n\t\t\t\t// any contentEditable element.\n\t\t\t\tif ( ownerDocument.activeElement.contentEditable !== 'true' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( ! ownerDocument.activeElement.contains( element ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst selection = defaultView.getSelection();\n\t\t\t\tconst { anchorNode, focusNode } = selection;\n\n\t\t\t\tif (\n\t\t\t\t\telement.contains( anchorNode ) &&\n\t\t\t\t\telement !== anchorNode &&\n\t\t\t\t\telement.contains( focusNode ) &&\n\t\t\t\t\telement !== focusNode\n\t\t\t\t) {\n\t\t\t\t\tconst { start, end } = createRecord();\n\t\t\t\t\trecord.current.activeFormats = EMPTY_ACTIVE_FORMATS;\n\t\t\t\t\tonSelectionChange( start, end );\n\t\t\t\t} else if (\n\t\t\t\t\telement.contains( anchorNode ) &&\n\t\t\t\t\telement !== anchorNode\n\t\t\t\t) {\n\t\t\t\t\tconst { start, end: offset = start } = createRecord();\n\t\t\t\t\trecord.current.activeFormats = EMPTY_ACTIVE_FORMATS;\n\t\t\t\t\tonSelectionChange( offset );\n\t\t\t\t} else if ( element.contains( focusNode ) ) {\n\t\t\t\t\tconst { start, end: offset = start } = createRecord();\n\t\t\t\t\trecord.current.activeFormats = EMPTY_ACTIVE_FORMATS;\n\t\t\t\t\tonSelectionChange( undefined, offset );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case of a keyboard event, ignore selection changes during\n\t\t\t// composition.\n\t\t\tif ( isComposing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { start, end, text } = createRecord();\n\t\t\tconst oldRecord = record.current;\n\n\t\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t\t// Any input results in a selection change.\n\t\t\tif ( text !== oldRecord.text ) {\n\t\t\t\tonInput();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t\t// the caret before the placeholder if that's the case.\n\t\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\t\tfixPlaceholderSelection( defaultView );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newValue = {\n\t\t\t\t...oldRecord,\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\t// _newActiveFormats may be set on arrow key navigation to control\n\t\t\t\t// the right boundary position. If undefined, getActiveFormats will\n\t\t\t\t// give the active formats according to the browser.\n\t\t\t\tactiveFormats: oldRecord._newActiveFormats,\n\t\t\t\t_newActiveFormats: undefined,\n\t\t\t};\n\n\t\t\tconst newActiveFormats = getActiveFormats(\n\t\t\t\tnewValue,\n\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t);\n\n\t\t\t// Update the value with the new active formats.\n\t\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\t\t// It is important that the internal value is updated first,\n\t\t\t// otherwise the value will be wrong on render!\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue, { domOnly: true } );\n\t\t\tonSelectionChange( start, end );\n\t\t}\n\n\t\tfunction onCompositionStart() {\n\t\t\tisComposing = true;\n\t\t\t// Do not update the selection when characters are being composed as\n\t\t\t// this rerenders the component and might destroy internal browser\n\t\t\t// editing state.\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\t// Remove the placeholder. Since the rich text value doesn't update\n\t\t\t// during composition, the placeholder doesn't get removed. There's\n\t\t\t// no need to re-add it, when the value is updated on compositionend\n\t\t\t// it will be re-added when the value is empty.\n\t\t\telement.querySelector( `[${ PLACEHOLDER_ATTR_NAME }]` )?.remove();\n\t\t}\n\n\t\tfunction onCompositionEnd() {\n\t\t\tisComposing = false;\n\t\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t\t// input event after composition.\n\t\t\tonInput( { inputType: 'insertText' } );\n\t\t\t// Tracking selection changes can be resumed.\n\t\t\townerDocument.addEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t}\n\n\t\tfunction onFocus() {\n\t\t\tconst { record, isSelected, onSelectionChange, applyRecord } =\n\t\t\t\tpropsRef.current;\n\n\t\t\t// When the whole editor is editable, let writing flow handle\n\t\t\t// selection.\n\t\t\tif ( element.parentElement.closest( '[contenteditable=\"true\"]' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! isSelected ) {\n\t\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t\t// event.\n\t\t\t\tconst index = undefined;\n\n\t\t\t\trecord.current = {\n\t\t\t\t\t...record.current,\n\t\t\t\t\tstart: index,\n\t\t\t\t\tend: index,\n\t\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tapplyRecord( record.current );\n\t\t\t\tonSelectionChange( record.current.start, record.current.end );\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'input', onInput );\n\t\telement.addEventListener( 'compositionstart', onCompositionStart );\n\t\telement.addEventListener( 'compositionend', onCompositionEnd );\n\t\telement.addEventListener( 'focus', onFocus );\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'input', onInput );\n\t\t\telement.removeEventListener(\n\t\t\t\t'compositionstart',\n\t\t\t\tonCompositionStart\n\t\t\t);\n\t\t\telement.removeEventListener( 'compositionend', onCompositionEnd );\n\t\t\telement.removeEventListener( 'focus', onFocus );\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\n\nexport function useSelectObject() {\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onClick( event ) {\n\t\t\tconst { target } = event;\n\n\t\t\t// If the child element has no text content, it must be an object.\n\t\t\tif (\n\t\t\t\ttarget === element ||\n\t\t\t\t( target.textContent && target.isContentEditable )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { ownerDocument } = target;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\tconst selection = defaultView.getSelection();\n\n\t\t\t// If it's already selected, do nothing and let default behavior\n\t\t\t// happen. This means it's \"click-through\".\n\t\t\tif ( selection.containsNode( target ) ) return;\n\n\t\t\tconst range = ownerDocument.createRange();\n\t\t\t// If the target is within a non editable element, select the non\n\t\t\t// editable element.\n\t\t\tconst nodeToSelect = target.isContentEditable\n\t\t\t\t? target\n\t\t\t\t: target.closest( '[contenteditable]' );\n\n\t\t\trange.selectNode( nodeToSelect );\n\t\t\tselection.removeAllRanges();\n\t\t\tselection.addRange( range );\n\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tfunction onFocusIn( event ) {\n\t\t\t// When there is incoming focus from a link, select the object.\n\t\t\tif (\n\t\t\t\tevent.relatedTarget &&\n\t\t\t\t! element.contains( event.relatedTarget ) &&\n\t\t\t\tevent.relatedTarget.tagName === 'A'\n\t\t\t) {\n\t\t\t\tonClick( event );\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'click', onClick );\n\t\telement.addEventListener( 'focusin', onFocusIn );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'click', onClick );\n\t\t\telement.removeEventListener( 'focusin', onFocusIn );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { isRangeEqual } from '../is-range-equal';\n\n/**\n * Sometimes some browsers are not firing a `selectionchange` event when\n * changing the selection by mouse or keyboard. This hook makes sure that, if we\n * detect no `selectionchange` or `input` event between the up and down events,\n * we fire a `selectionchange` event.\n *\n * @return {import('@wordpress/compose').RefEffect} A ref effect attaching the\n *                                                  listeners.\n */\nexport function useSelectionChangeCompat() {\n\treturn useRefEffect( ( element ) => {\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst selection = defaultView?.getSelection();\n\n\t\tlet range;\n\n\t\tfunction getRange() {\n\t\t\treturn selection.rangeCount ? selection.getRangeAt( 0 ) : null;\n\t\t}\n\n\t\tfunction onDown( event ) {\n\t\t\tconst type = event.type === 'keydown' ? 'keyup' : 'pointerup';\n\n\t\t\tfunction onCancel() {\n\t\t\t\townerDocument.removeEventListener( type, onUp );\n\t\t\t\townerDocument.removeEventListener(\n\t\t\t\t\t'selectionchange',\n\t\t\t\t\tonCancel\n\t\t\t\t);\n\t\t\t\townerDocument.removeEventListener( 'input', onCancel );\n\t\t\t}\n\n\t\t\tfunction onUp() {\n\t\t\t\tonCancel();\n\t\t\t\tif ( isRangeEqual( range, getRange() ) ) return;\n\t\t\t\townerDocument.dispatchEvent( new Event( 'selectionchange' ) );\n\t\t\t}\n\n\t\t\townerDocument.addEventListener( type, onUp );\n\t\t\townerDocument.addEventListener( 'selectionchange', onCancel );\n\t\t\townerDocument.addEventListener( 'input', onCancel );\n\n\t\t\trange = getRange();\n\t\t}\n\n\t\telement.addEventListener( 'pointerdown', onDown );\n\t\telement.addEventListener( 'keydown', onDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'pointerdown', onDown );\n\t\t\telement.removeEventListener( 'keydown', onDown );\n\t\t};\n\t}, [] );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\nimport { create } from './create';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Concats a pair of rich text values. Not that this mutates `a` and does NOT\n * normalise formats!\n *\n * @param {Object} a Value to mutate.\n * @param {Object} b Value to add read from.\n *\n * @return {Object} `a`, mutated.\n */\nexport function mergePair( a, b ) {\n\ta.formats = a.formats.concat( b.formats );\n\ta.replacements = a.replacements.concat( b.replacements );\n\ta.text += b.text;\n\n\treturn a;\n}\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...RichTextValue} values Objects to combine.\n *\n * @return {RichTextValue} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( mergePair, create() ) );\n}\n","/**\n * Parse the given HTML into a body element.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createElement`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @param {HTMLDocument} document The HTML document to use to parse.\n * @param {string}       html     The HTML to parse.\n *\n * @return {HTMLBodyElement} Body element with parsed HTML.\n */\nexport function createElement( { implementation }, html ) {\n\t// Because `createHTMLDocument` is an expensive operation, and with this\n\t// function being internal to `rich-text` (full control in avoiding a risk\n\t// of asynchronous operations on the shared reference), a single document\n\t// is reused and reset for each call to the function.\n\tif ( ! createElement.body ) {\n\t\tcreateElement.body = implementation.createHTMLDocument( '' ).body;\n\t}\n\n\tcreateElement.body.innerHTML = html;\n\n\treturn createElement.body;\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction toFormat( { tagName, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( richTextStore ).getFormatTypeForClassName(\n\t\t\tattributes.class\n\t\t);\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `\n\t\t\t\t.replace( ` ${ formatType.className } `, ' ' )\n\t\t\t\t.trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType =\n\t\t\tselect( richTextStore ).getFormatTypeForBareElement( tagName );\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type: tagName, attributes } : { type: tagName };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { formatType, type: formatType.name, tagName };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\tconst _attributes = { ...attributes };\n\n\tfor ( const key in formatType.attributes ) {\n\t\tconst name = formatType.attributes[ key ];\n\n\t\tregisteredAttributes[ key ] = _attributes[ name ];\n\n\t\tif ( formatType.__unstableFilterAttributeValue ) {\n\t\t\tregisteredAttributes[ key ] =\n\t\t\t\tformatType.__unstableFilterAttributeValue(\n\t\t\t\t\tkey,\n\t\t\t\t\tregisteredAttributes[ key ]\n\t\t\t\t);\n\t\t}\n\n\t\t// delete the attribute and what's left is considered\n\t\t// to be unregistered.\n\t\tdelete _attributes[ name ];\n\n\t\tif ( typeof registeredAttributes[ key ] === 'undefined' ) {\n\t\t\tdelete registeredAttributes[ key ];\n\t\t}\n\t}\n\n\tfor ( const name in _attributes ) {\n\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t}\n\n\tif ( formatType.contentEditable === false ) {\n\t\tdelete unregisteredAttributes.contenteditable;\n\t}\n\n\treturn {\n\t\tformatType,\n\t\ttype: formatType.name,\n\t\ttagName,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. If\n * `multilineTag` is provided, any content of direct children whose type matches\n * `multilineTag` will be separated by two newlines. The optional functions can\n * be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                          Optional named arguments.\n * @param {Element} [$1.element]                  Element to create value from.\n * @param {string}  [$1.text]                     Text to create value from.\n * @param {string}  [$1.html]                     HTML to create value from.\n * @param {Range}   [$1.range]                    Range to create value from.\n * @param {string}  [$1.multilineTag]             Multiline tag if the structure is\n *                                                multiline.\n * @param {Array}   [$1.multilineWrapperTags]     Tags where lines can be found if\n *                                                nesting is possible.\n * @param {boolean} [$1.preserveWhiteSpace]       Whether or not to collapse white\n *                                                space characters.\n * @param {boolean} [$1.__unstableIsEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\t__unstableIsEditableTree: isEditableTree,\n\tpreserveWhiteSpace,\n} = {} ) {\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\t// It does not matter which document this is, we're just using it to\n\t\t// parse.\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\tif ( ! multilineTag ) {\n\t\treturn createFromElement( {\n\t\t\telement,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\treturn createFromMultilineElement( {\n\t\telement,\n\t\trange,\n\t\tmultilineTag,\n\t\tmultilineWrapperTags,\n\t\tisEditableTree,\n\t\tpreserveWhiteSpace,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {Object|void} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\n/**\n * Collapse any whitespace used for HTML formatting to one space character,\n * because it will also be displayed as such by the browser.\n *\n * @param {string} string\n */\nfunction collapseWhiteSpace( string ) {\n\treturn string.replace( /[\\n\\r\\t]+/g, ' ' );\n}\n\n/**\n * Removes reserved characters used by rich-text (zero width non breaking spaces added by `toTree` and object replacement characters).\n *\n * @param {string} string\n */\nexport function removeReservedCharacters( string ) {\n\t// with the global flag, note that we should create a new regex each time OR reset lastIndex state.\n\treturn string.replace(\n\t\tnew RegExp( `[${ ZWNBSP }${ OBJECT_REPLACEMENT_CHARACTER }]`, 'gu' ),\n\t\t''\n\t);\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}  $1                        Named argements.\n * @param {Element} [$1.element]              Element to create value from.\n * @param {Range}   [$1.range]                Range to create value from.\n * @param {string}  [$1.multilineTag]         Multiline tag if the structure is\n *                                            multiline.\n * @param {Array}   [$1.multilineWrapperTags] Tags where lines can be found if\n *                                            nesting is possible.\n * @param {boolean} [$1.preserveWhiteSpace]   Whether or not to collapse white\n *                                            space characters.\n * @param {Array}   [$1.currentWrapperTags]\n * @param {boolean} [$1.isEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nfunction createFromElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n\tpreserveWhiteSpace,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst tagName = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tlet filter = removeReservedCharacters;\n\n\t\t\tif ( ! preserveWhiteSpace ) {\n\t\t\t\tfilter = ( string ) =>\n\t\t\t\t\tremoveReservedCharacters( collapseWhiteSpace( string ) );\n\t\t\t}\n\n\t\t\tconst text = filter( node.nodeValue );\n\t\t\trange = filterRange( node, range, filter );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== node.ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tisEditableTree &&\n\t\t\t// Ignore any placeholders.\n\t\t\t( node.getAttribute( 'data-rich-text-placeholder' ) ||\n\t\t\t\t// Ignore any line breaks that are not inserted by us.\n\t\t\t\t( tagName === 'br' &&\n\t\t\t\t\t! node.getAttribute( 'data-rich-text-line-break' ) ) )\n\t\t) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'script' ) {\n\t\t\tconst value = {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: tagName,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t'data-rich-text-script':\n\t\t\t\t\t\t\t\tnode.getAttribute( 'data-rich-text-script' ) ||\n\t\t\t\t\t\t\t\tencodeURIComponent( node.innerHTML ),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t};\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst format = toFormat( {\n\t\t\ttagName,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\n\t\t// When a format type is declared as not editable, replace it with an\n\t\t// object replacement character and preserve the inner HTML.\n\t\tif ( format?.formatType?.contentEditable === false ) {\n\t\t\tdelete format.formatType;\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...format,\n\t\t\t\t\t\tinnerHTML: node.innerHTML,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( format ) delete format.formatType;\n\n\t\tif (\n\t\t\tmultilineWrapperTags &&\n\t\t\tmultilineWrapperTags.indexOf( tagName ) !== -1\n\t\t) {\n\t\t\tconst value = createFromMultilineElement( {\n\t\t\t\telement: node,\n\t\t\t\trange,\n\t\t\t\tmultilineTag,\n\t\t\t\tmultilineWrapperTags,\n\t\t\t\tcurrentWrapperTags: [ ...currentWrapperTags, format ],\n\t\t\t\tisEditableTree,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\tif ( ! format ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\t// Indices should share a reference to the same formats array.\n\t\t\t// Only create a new reference if `formats` changes.\n\t\t\tfunction mergeFormats( formats ) {\n\t\t\t\tif ( mergeFormats.formats === formats ) {\n\t\t\t\t\treturn mergeFormats.newFormats;\n\t\t\t\t}\n\n\t\t\t\tconst newFormats = formats\n\t\t\t\t\t? [ format, ...formats ]\n\t\t\t\t\t: [ format ];\n\n\t\t\t\tmergeFormats.formats = formats;\n\t\t\t\tmergeFormats.newFormats = newFormats;\n\n\t\t\t\treturn newFormats;\n\t\t\t}\n\n\t\t\t// Since the formats parameter can be `undefined`, preset\n\t\t\t// `mergeFormats` with a new reference.\n\t\t\tmergeFormats.newFormats = [ format ];\n\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, mergeFormats ),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Creates a rich text value from a DOM element and range that should be\n * multiline.\n *\n * @param {Object}  $1                        Named argements.\n * @param {Element} [$1.element]              Element to create value from.\n * @param {Range}   [$1.range]                Range to create value from.\n * @param {string}  [$1.multilineTag]         Multiline tag if the structure is\n *                                            multiline.\n * @param {Array}   [$1.multilineWrapperTags] Tags where lines can be found if\n *                                            nesting is possible.\n * @param {Array}   [$1.currentWrapperTags]   Whether to prepend a line\n *                                            separator.\n * @param {boolean} [$1.preserveWhiteSpace]   Whether or not to collapse white\n *                                            space characters.\n * @param {boolean} [$1.isEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nfunction createFromMultilineElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n\tpreserveWhiteSpace,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element || ! element.hasChildNodes() ) {\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.children.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.children[ index ];\n\n\t\tif ( node.nodeName.toLowerCase() !== multilineTag ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tcurrentWrapperTags,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\t// Multiline value text should be separated by a line separator.\n\t\tif ( index !== 0 || currentWrapperTags.length > 0 ) {\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements:\n\t\t\t\t\tcurrentWrapperTags.length > 0\n\t\t\t\t\t\t? [ currentWrapperTags ]\n\t\t\t\t\t\t: [ , ],\n\t\t\t\ttext: LINE_SEPARATOR,\n\t\t\t} );\n\t\t}\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\t\tmergePair( accumulator, value );\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}  $1         Named argements.\n * @param {Element} $1.element Element to get attributes from.\n *\n * @return {Object|void} Attribute object or `undefined` if the element has no\n *                       attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst safeName = /^on/i.test( name )\n\t\t\t? 'data-disable-rich-text-' + name\n\t\t\t: name;\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ safeName ] = value;\n\t}\n\n\treturn accumulator;\n}\n","/**\n * Internal dependencies\n */\nimport { getActiveFormats } from './get-active-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the format object by type at the start of the selection. This can be\n * used to get e.g. the URL of a link format at the current selection, but also\n * to check if a format is active at the selection. Returns undefined if there\n * is no format at the selection.\n *\n * @param {RichTextValue} value      Value to inspect.\n * @param {string}        formatType Format type to look for.\n *\n * @return {RichTextFormat|undefined} Active format object of the specified\n *                                    type, or undefined.\n */\nexport function getActiveFormat( value, formatType ) {\n\treturn getActiveFormats( value ).find(\n\t\t( { type } ) => type === formatType\n\t);\n}\n","/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormatList} RichTextFormatList */\n\n/**\n * Internal dependencies\n */\nimport { isFormatEqual } from './is-format-equal';\n\n/**\n * Gets the all format objects at the start of the selection.\n *\n * @param {RichTextValue} value                Value to inspect.\n * @param {Array}         EMPTY_ACTIVE_FORMATS Array to return if there are no\n *                                             active formats.\n *\n * @return {RichTextFormatList} Active format objects.\n */\nexport function getActiveFormats( value, EMPTY_ACTIVE_FORMATS = [] ) {\n\tconst { formats, start, end, activeFormats } = value;\n\tif ( start === undefined ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tif ( start === end ) {\n\t\t// For a collapsed caret, it is possible to override the active formats.\n\t\tif ( activeFormats ) {\n\t\t\treturn activeFormats;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\t// By default, select the lowest amount of formats possible (which means\n\t\t// the caret is positioned outside the format boundary). The user can\n\t\t// then use arrow keys to define `activeFormats`.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\treturn formatsBefore;\n\t\t}\n\n\t\treturn formatsAfter;\n\t}\n\n\t// If there's no formats at the start index, there are not active formats.\n\tif ( ! formats[ start ] ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tconst selectedFormats = formats.slice( start, end );\n\n\t// Clone the formats so we're not mutating the live value.\n\tconst _activeFormats = [ ...selectedFormats[ 0 ] ];\n\tlet i = selectedFormats.length;\n\n\t// For performance reasons, start from the end where it's much quicker to\n\t// realise that there are no active formats.\n\twhile ( i-- ) {\n\t\tconst formatsAtIndex = selectedFormats[ i ];\n\n\t\t// If we run into any index without formats, we're sure that there's no\n\t\t// active formats.\n\t\tif ( ! formatsAtIndex ) {\n\t\t\treturn EMPTY_ACTIVE_FORMATS;\n\t\t}\n\n\t\tlet ii = _activeFormats.length;\n\n\t\t// Loop over the active formats and remove any that are not present at\n\t\t// the current index.\n\t\twhile ( ii-- ) {\n\t\t\tconst format = _activeFormats[ ii ];\n\n\t\t\tif (\n\t\t\t\t! formatsAtIndex.find( ( _format ) =>\n\t\t\t\t\tisFormatEqual( format, _format )\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_activeFormats.splice( ii, 1 );\n\t\t\t}\n\t\t}\n\n\t\t// If there are no active formats, we can stop.\n\t\tif ( _activeFormats.length === 0 ) {\n\t\t\treturn EMPTY_ACTIVE_FORMATS;\n\t\t}\n\t}\n\n\treturn _activeFormats || EMPTY_ACTIVE_FORMATS;\n}\n","/**\n * Internal dependencies\n */\n\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the active object, if there is any.\n *\n * @param {RichTextValue} value Value to inspect.\n *\n * @return {RichTextFormat|void} Active object, or undefined.\n */\nexport function getActiveObject( { start, end, replacements, text } ) {\n\tif ( start + 1 !== end || text[ start ] !== OBJECT_REPLACEMENT_CHARACTER ) {\n\t\treturn;\n\t}\n\n\treturn replacements[ start ];\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').RichTextFormatType} RichTextFormatType */\n\n/**\n * Returns a registered format type.\n *\n * @param {string} name Format name.\n *\n * @return {RichTextFormatType|undefined} Format type.\n */\nexport function getFormatType( name ) {\n\treturn select( richTextStore ).getFormatType( name );\n}\n","/**\n * Internal dependencies\n */\nimport {\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tLINE_SEPARATOR,\n} from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\nconst pattern = new RegExp(\n\t`[${ OBJECT_REPLACEMENT_CHARACTER }${ LINE_SEPARATOR }]`,\n\t'g'\n);\n\n/**\n * Get the textual content of a Rich Text value. This is similar to\n * `Element.textContent`.\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {string} The text content.\n */\nexport function getTextContent( { text } ) {\n\treturn text.replace( pattern, ( c ) =>\n\t\tc === OBJECT_REPLACEMENT_CHARACTER ? '' : '\\n'\n\t);\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Insert a line break character into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the value inserted.\n */\nexport function insertLineSeparator(\n\tvalue,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst beforeText = value.text.slice( 0, startIndex );\n\tconst previousLineSeparatorIndex = beforeText.lastIndexOf( LINE_SEPARATOR );\n\tconst previousLineSeparatorFormats =\n\t\tvalue.replacements[ previousLineSeparatorIndex ];\n\tlet replacements = [ , ];\n\n\tif ( previousLineSeparatorFormats ) {\n\t\treplacements = [ previousLineSeparatorFormats ];\n\t}\n\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements,\n\t\ttext: LINE_SEPARATOR,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Insert a format as an object into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue}  value          Value to modify.\n * @param {RichTextFormat} formatToInsert Format to insert as object.\n * @param {number}         [startIndex]   Start index.\n * @param {number}         [endIndex]     End index.\n *\n * @return {RichTextValue} A new value with the object inserted.\n */\nexport function insertObject( value, formatToInsert, startIndex, endIndex ) {\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements: [ formatToInsert ],\n\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {RichTextValue}        value         Value to modify.\n * @param {RichTextValue|string} valueToInsert Value to insert.\n * @param {number}               [startIndex]  Start index.\n * @param {number}               [endIndex]    End index.\n *\n * @return {RichTextValue} A new value with the value inserted.\n */\nexport function insert(\n\tvalue,\n\tvalueToInsert,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\treplacements: replacements\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat(\n\t\t\t\tvalueToInsert.replacements,\n\t\t\t\treplacements.slice( endIndex )\n\t\t\t),\n\t\ttext:\n\t\t\ttext.slice( 0, startIndex ) +\n\t\t\tvalueToInsert.text +\n\t\t\ttext.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n","/**\n * Internal dependencies\n */\nimport type { RichTextValue } from './types';\n\n/**\n * Check if the selection of a Rich Text value is collapsed or not. Collapsed\n * means that no characters are selected, but there is a caret present. If there\n * is no selection, `undefined` will be returned. This is similar to\n * `window.getSelection().isCollapsed()`.\n *\n * @param props       The rich text value to check.\n * @param props.start\n * @param props.end\n * @return True if the selection is collapsed, false if not, undefined if there is no selection.\n */\nexport function isCollapsed( {\n\tstart,\n\tend,\n}: RichTextValue ): boolean | undefined {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\treturn start === end;\n}\n","/**\n * Internal dependencies\n */\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Check if a Rich Text value is Empty, meaning it contains no text or any\n * objects (such as images).\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {boolean} True if the value is empty, false if not.\n */\nexport function isEmpty( { text } ) {\n\treturn text.length === 0;\n}\n\n/**\n * Check if the current collapsed selection is on an empty line in case of a\n * multiline value.\n *\n * @param {RichTextValue} value Value te check.\n *\n * @return {boolean} True if the line is empty, false if not.\n */\nexport function isEmptyLine( { text, start, end } ) {\n\tif ( start !== end ) {\n\t\treturn false;\n\t}\n\n\tif ( text.length === 0 ) {\n\t\treturn true;\n\t}\n\n\tif ( start === 0 && text.slice( 0, 1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\tif ( start === text.length && text.slice( -1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\ttext.slice( start - 1, end + 1 ) ===\n\t\t`${ LINE_SEPARATOR }${ LINE_SEPARATOR }`\n\t);\n}\n","/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Optimised equality check for format objects.\n *\n * @param {?RichTextFormat} format1 Format to compare.\n * @param {?RichTextFormat} format2 Format to compare.\n *\n * @return {boolean} True if formats are equal, false if not.\n */\nexport function isFormatEqual( format1, format2 ) {\n\t// Both not defined.\n\tif ( format1 === format2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! format1 || ! format2 ) {\n\t\treturn false;\n\t}\n\n\tif ( format1.type !== format2.type ) {\n\t\treturn false;\n\t}\n\n\tconst attributes1 = format1.attributes;\n\tconst attributes2 = format2.attributes;\n\n\t// Both not defined.\n\tif ( attributes1 === attributes2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! attributes1 || ! attributes2 ) {\n\t\treturn false;\n\t}\n\n\tconst keys1 = Object.keys( attributes1 );\n\tconst keys2 = Object.keys( attributes2 );\n\n\tif ( keys1.length !== keys2.length ) {\n\t\treturn false;\n\t}\n\n\tconst length = keys1.length;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst name = keys1[ i ];\n\n\t\tif ( attributes1[ name ] !== attributes2[ name ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/**\n * Returns true if two ranges are equal, or false otherwise. Ranges are\n * considered equal if their start and end occur in the same container and\n * offset.\n *\n * @param {Range|null} a First range object to test.\n * @param {Range|null} b First range object to test.\n *\n * @return {boolean} Whether the two ranges are equal.\n */\nexport function isRangeEqual( a, b ) {\n\treturn (\n\t\ta === b ||\n\t\t( a &&\n\t\t\tb &&\n\t\t\ta.startContainer === b.startContainer &&\n\t\t\ta.startOffset === b.startOffset &&\n\t\t\ta.endContainer === b.endContainer &&\n\t\t\ta.endOffset === b.endOffset )\n\t);\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Combine an array of Rich Text values into one, optionally separated by\n * `separator`, which can be a Rich Text value, HTML string, or plain text\n * string. This is similar to `Array.prototype.join`.\n *\n * @param {Array<RichTextValue>} values      An array of values to join.\n * @param {string|RichTextValue} [separator] Separator string or value.\n *\n * @return {RichTextValue} A new combined value.\n */\nexport function join( values, separator = '' ) {\n\tif ( typeof separator === 'string' ) {\n\t\tseparator = create( { text: separator } );\n\t}\n\n\treturn normaliseFormats(\n\t\tvalues.reduce( ( accumlator, { formats, replacements, text } ) => ( {\n\t\t\tformats: accumlator.formats.concat( separator.formats, formats ),\n\t\t\treplacements: accumlator.replacements.concat(\n\t\t\t\tseparator.replacements,\n\t\t\t\treplacements\n\t\t\t),\n\t\t\ttext: accumlator.text + separator.text + text,\n\t\t} ) )\n\t);\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Normalises formats: ensures subsequent adjacent equal formats have the same\n * reference.\n *\n * @param {RichTextValue} value Value to normalise formats of.\n *\n * @return {RichTextValue} New value with normalised formats.\n */\nexport function normaliseFormats( value ) {\n\tconst newFormats = value.formats.slice();\n\n\tnewFormats.forEach( ( formatsAtIndex, index ) => {\n\t\tconst formatsAtPreviousIndex = newFormats[ index - 1 ];\n\n\t\tif ( formatsAtPreviousIndex ) {\n\t\t\tconst newFormatsAtIndex = formatsAtIndex.slice();\n\n\t\t\tnewFormatsAtIndex.forEach( ( format, formatIndex ) => {\n\t\t\t\tconst previousFormat = formatsAtPreviousIndex[ formatIndex ];\n\n\t\t\t\tif ( isFormatEqual( format, previousFormat ) ) {\n\t\t\t\t\tnewFormatsAtIndex[ formatIndex ] = previousFormat;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnewFormats[ index ] = newFormatsAtIndex;\n\t\t}\n\t} );\n\n\treturn {\n\t\t...value,\n\t\tformats: newFormats,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n/**\n * @typedef {Object} WPFormat\n *\n * @property {string}   name        A string identifying the format. Must be\n *                                  unique across all registered formats.\n * @property {string}   tagName     The HTML tag this format will wrap the\n *                                  selection with.\n * @property {string}   [className] A class to match the format.\n * @property {string}   title       Name of the format.\n * @property {Function} edit        Should return a component for the user to\n *                                  interact with the new registered format.\n */\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string}   name     Format name.\n * @param {WPFormat} settings Format settings.\n *\n * @return {WPFormat|undefined} The format, if it has been successfully\n *                              registered; otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error( 'Format names must be strings.' );\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( richTextStore ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.tagName !== 'string' || settings.tagName === '' ) {\n\t\twindow.console.error( 'Format tag names must be a string.' );\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' ||\n\t\t\tsettings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForBareElement( settings.tagName );\n\n\t\tif (\n\t\t\tformatTypeForBareElement &&\n\t\t\tformatTypeForBareElement.name !== 'core/unknown'\n\t\t) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' +\n\t\t\t\tsettings.name +\n\t\t\t\t'\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error( 'Format titles must be strings.' );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).addFormatTypes( settings );\n\n\treturn settings;\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Remove any format object from a Rich Text value by type from the given\n * `startIndex` to the given `endIndex`. Indices are retrieved from the\n * selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {string}        formatType   Format type to remove.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the format applied.\n */\nexport function removeFormat(\n\tvalue,\n\tformatType,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// If the selection is collapsed, expand start and end to the edges of the\n\t// format.\n\tif ( startIndex === endIndex ) {\n\t\tconst format = newFormats[ startIndex ]?.find(\n\t\t\t( { type } ) => type === formatType\n\t\t);\n\n\t\tif ( format ) {\n\t\t\twhile (\n\t\t\t\tnewFormats[ startIndex ]?.find(\n\t\t\t\t\t( newFormat ) => newFormat === format\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfilterFormats( newFormats, startIndex, formatType );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ endIndex ]?.find(\n\t\t\t\t\t( newFormat ) => newFormat === format\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfilterFormats( newFormats, endIndex, formatType );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( let i = startIndex; i < endIndex; i++ ) {\n\t\t\tif ( newFormats[ i ] ) {\n\t\t\t\tfilterFormats( newFormats, i, formatType );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\tactiveFormats:\n\t\t\tactiveFormats?.filter( ( { type } ) => type !== formatType ) || [],\n\t} );\n}\n\nfunction filterFormats( formats, index, formatType ) {\n\tconst newFormats = formats[ index ].filter(\n\t\t( { type } ) => type !== formatType\n\t);\n\n\tif ( newFormats.length ) {\n\t\tformats[ index ] = newFormats;\n\t} else {\n\t\tdelete formats[ index ];\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { isCollapsed } from './is-collapsed';\nimport { remove } from './remove';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Removes a line separator character, if existing, from a Rich Text value at\n * the current indices. If no line separator exists on the indices it will\n * return undefined.\n *\n * @param {RichTextValue} value    Value to modify.\n * @param {boolean}       backward Indicates if are removing from the start\n *                                 index or the end index.\n *\n * @return {RichTextValue|undefined} A new value with the line separator\n *                                   removed. Or undefined if no line separator\n *                                   is found on the position.\n */\nexport function removeLineSeparator( value, backward = true ) {\n\tconst { replacements, text, start, end } = value;\n\tconst collapsed = isCollapsed( value );\n\tlet index = start - 1;\n\tlet removeStart = collapsed ? start - 1 : start;\n\tlet removeEnd = end;\n\tif ( ! backward ) {\n\t\tindex = end;\n\t\tremoveStart = start;\n\t\tremoveEnd = collapsed ? end + 1 : end;\n\t}\n\n\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\treturn;\n\t}\n\n\tlet newValue;\n\t// If the line separator that is about te be removed\n\t// contains wrappers, remove the wrappers first.\n\tif ( collapsed && replacements[ index ] && replacements[ index ].length ) {\n\t\tconst newReplacements = replacements.slice();\n\n\t\tnewReplacements[ index ] = replacements[ index ].slice( 0, -1 );\n\t\tnewValue = {\n\t\t\t...value,\n\t\t\treplacements: newReplacements,\n\t\t};\n\t} else {\n\t\tnewValue = remove( value, removeStart, removeEnd );\n\t}\n\treturn newValue;\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { create } from './create';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Remove content from a Rich Text value between the given `startIndex` and\n * `endIndex`. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the content removed.\n */\nexport function remove( value, startIndex, endIndex ) {\n\treturn insert( value, create(), startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Search a Rich Text value and replace the match(es) with `replacement`. This\n * is similar to `String.prototype.replace`.\n *\n * @param {RichTextValue}   value       The value to modify.\n * @param {RegExp|string}   pattern     A RegExp object or literal. Can also be\n *                                      a string. It is treated as a verbatim\n *                                      string and is not interpreted as a\n *                                      regular expression. Only the first\n *                                      occurrence will be replaced.\n * @param {Function|string} replacement The match or matches are replaced with\n *                                      the specified or the value returned by\n *                                      the specified function.\n *\n * @return {RichTextValue} A new value with replacements applied.\n */\nexport function replace(\n\t{ formats, replacements, text, start, end },\n\tpattern,\n\treplacement\n) {\n\ttext = text.replace( pattern, ( match, ...rest ) => {\n\t\tconst offset = rest[ rest.length - 2 ];\n\t\tlet newText = replacement;\n\t\tlet newFormats;\n\t\tlet newReplacements;\n\n\t\tif ( typeof newText === 'function' ) {\n\t\t\tnewText = replacement( match, ...rest );\n\t\t}\n\n\t\tif ( typeof newText === 'object' ) {\n\t\t\tnewFormats = newText.formats;\n\t\t\tnewReplacements = newText.replacements;\n\t\t\tnewText = newText.text;\n\t\t} else {\n\t\t\tnewFormats = Array( newText.length );\n\t\t\tnewReplacements = Array( newText.length );\n\n\t\t\tif ( formats[ offset ] ) {\n\t\t\t\tnewFormats = newFormats.fill( formats[ offset ] );\n\t\t\t}\n\t\t}\n\n\t\tformats = formats\n\t\t\t.slice( 0, offset )\n\t\t\t.concat( newFormats, formats.slice( offset + match.length ) );\n\t\treplacements = replacements\n\t\t\t.slice( 0, offset )\n\t\t\t.concat(\n\t\t\t\tnewReplacements,\n\t\t\t\treplacements.slice( offset + match.length )\n\t\t\t);\n\n\t\tif ( start ) {\n\t\t\tstart = end = offset + newText.length;\n\t\t}\n\n\t\treturn newText;\n\t} );\n\n\treturn normaliseFormats( { formats, replacements, text, start, end } );\n}\n","/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Slice a Rich Text value from `startIndex` to `endIndex`. Indices are\n * retrieved from the selection if none are provided. This is similar to\n * `String.prototype.slice`.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new extracted value.\n */\nexport function slice( value, startIndex = value.start, endIndex = value.end ) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( startIndex === undefined || endIndex === undefined ) {\n\t\treturn { ...value };\n\t}\n\n\treturn {\n\t\tformats: formats.slice( startIndex, endIndex ),\n\t\treplacements: replacements.slice( startIndex, endIndex ),\n\t\ttext: text.slice( startIndex, endIndex ),\n\t};\n}\n","/**\n * Line separator character, used for multiline text.\n */\nexport const LINE_SEPARATOR = '\\u2028';\n\n/**\n * Object replacement character, used as a placeholder for objects.\n */\nexport const OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Zero width non-breaking space, used as padding in the editable DOM tree when\n * it is empty otherwise.\n */\nexport const ZWNBSP = '\\ufeff';\n","/**\n * Internal dependencies\n */\n\nimport { replace } from './replace';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Split a Rich Text value in two at the given `startIndex` and `endIndex`, or\n * split at the given separator. This is similar to `String.prototype.split`.\n * Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value\n * @param {number|string} [string] Start index, or string at which to split.\n *\n * @return {Array<RichTextValue>|undefined} An array of new values.\n */\nexport function split( { formats, replacements, text, start, end }, string ) {\n\tif ( typeof string !== 'string' ) {\n\t\treturn splitAtSelection( ...arguments );\n\t}\n\n\tlet nextStart = 0;\n\n\treturn text.split( string ).map( ( substring ) => {\n\t\tconst startIndex = nextStart;\n\t\tconst value = {\n\t\t\tformats: formats.slice( startIndex, startIndex + substring.length ),\n\t\t\treplacements: replacements.slice(\n\t\t\t\tstartIndex,\n\t\t\t\tstartIndex + substring.length\n\t\t\t),\n\t\t\ttext: substring,\n\t\t};\n\n\t\tnextStart += string.length + substring.length;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\t\t\tif ( start >= startIndex && start < nextStart ) {\n\t\t\t\tvalue.start = start - startIndex;\n\t\t\t} else if ( start < startIndex && end > startIndex ) {\n\t\t\t\tvalue.start = 0;\n\t\t\t}\n\n\t\t\tif ( end >= startIndex && end < nextStart ) {\n\t\t\t\tvalue.end = end - startIndex;\n\t\t\t} else if ( start < nextStart && end > nextStart ) {\n\t\t\t\tvalue.end = substring.length;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} );\n}\n\nfunction splitAtSelection(\n\t{ formats, replacements, text, start, end },\n\tstartIndex = start,\n\tendIndex = end\n) {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\tconst before = {\n\t\tformats: formats.slice( 0, startIndex ),\n\t\treplacements: replacements.slice( 0, startIndex ),\n\t\ttext: text.slice( 0, startIndex ),\n\t};\n\tconst after = {\n\t\tformats: formats.slice( endIndex ),\n\t\treplacements: replacements.slice( endIndex ),\n\t\ttext: text.slice( endIndex ),\n\t\tstart: 0,\n\t\tend: 0,\n\t};\n\n\treturn [\n\t\t// Ensure newlines are trimmed.\n\t\treplace( before, /\\u2028+$/, '' ),\n\t\treplace( after, /^\\u2028+/, '' ),\n\t];\n}\n","/**\n * Returns an action object used in signalling that format types have been\n * added.\n *\n * @param {Array|Object} formatTypes Format types received.\n *\n * @return {Object} Action object.\n */\nexport function addFormatTypes( formatTypes ) {\n\treturn {\n\t\ttype: 'ADD_FORMAT_TYPES',\n\t\tformatTypes: Array.isArray( formatTypes )\n\t\t\t? formatTypes\n\t\t\t: [ formatTypes ],\n\t};\n}\n\n/**\n * Returns an action object used to remove a registered format type.\n *\n * @param {string|Array} names Format name.\n *\n * @return {Object} Action object.\n */\nexport function removeFormatTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_FORMAT_TYPES',\n\t\tnames: Array.isArray( names ) ? names : [ names ],\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nconst STORE_NAME = 'core/rich-text';\n\n/**\n * Store definition for the rich-text namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n} );\n\nregister( store );\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer managing the format types\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function formatTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_FORMAT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// Key format types by their name.\n\t\t\t\t...action.formatTypes.reduce(\n\t\t\t\t\t( newFormatTypes, type ) => ( {\n\t\t\t\t\t\t...newFormatTypes,\n\t\t\t\t\t\t[ type.name ]: type,\n\t\t\t\t\t} ),\n\t\t\t\t\t{}\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'REMOVE_FORMAT_TYPES':\n\t\t\treturn Object.fromEntries(\n\t\t\t\tObject.entries( state ).filter(\n\t\t\t\t\t( [ key ] ) => ! action.names.includes( key )\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( { formatTypes } );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\n\n/**\n * Returns all the available format types.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Format types.\n */\nexport const getFormatTypes = createSelector(\n\t( state ) => Object.values( state.formatTypes ),\n\t( state ) => [ state.formatTypes ]\n);\n\n/**\n * Returns a format type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Format type name.\n *\n * @return {Object?} Format type.\n */\nexport function getFormatType( state, name ) {\n\treturn state.formatTypes[ name ];\n}\n\n/**\n * Gets the format type, if any, that can handle a bare element (without a\n * data-format-type attribute), given the tag name of this element.\n *\n * @param {Object} state              Data state.\n * @param {string} bareElementTagName The tag name of the element to find a\n *                                    format type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForBareElement( state, bareElementTagName ) {\n\tconst formatTypes = getFormatTypes( state );\n\treturn (\n\t\tformatTypes.find( ( { className, tagName } ) => {\n\t\t\treturn className === null && bareElementTagName === tagName;\n\t\t} ) ||\n\t\tformatTypes.find( ( { className, tagName } ) => {\n\t\t\treturn className === null && '*' === tagName;\n\t\t} )\n\t);\n}\n\n/**\n * Gets the format type, if any, that can handle an element, given its classes.\n *\n * @param {Object} state            Data state.\n * @param {string} elementClassName The classes of the element to find a format\n *                                  type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForClassName( state, elementClassName ) {\n\treturn getFormatTypes( state ).find( ( { className } ) => {\n\t\tif ( className === null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ` ${ elementClassName } `.indexOf( ` ${ className } ` ) >= 0;\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\nimport { createElement } from './create-element';\nimport { isRangeEqual } from './is-range-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Creates a path as an array of indices from the given root node to the given\n * node.\n *\n * @param {Node}        node     Node to find the path of.\n * @param {HTMLElement} rootNode Root node to find the path from.\n * @param {Array}       path     Initial path to build on.\n *\n * @return {Array} The path from the root node to the node.\n */\nfunction createPathToNode( node, rootNode, path ) {\n\tconst parentNode = node.parentNode;\n\tlet i = 0;\n\n\twhile ( ( node = node.previousSibling ) ) {\n\t\ti++;\n\t}\n\n\tpath = [ i, ...path ];\n\n\tif ( parentNode !== rootNode ) {\n\t\tpath = createPathToNode( parentNode, rootNode, path );\n\t}\n\n\treturn path;\n}\n\n/**\n * Gets a node given a path (array of indices) from the given node.\n *\n * @param {HTMLElement} node Root node to find the wanted node in.\n * @param {Array}       path Path (indices) to the wanted node.\n *\n * @return {Object} Object with the found node and the remaining offset (if any).\n */\nfunction getNodeByPath( node, path ) {\n\tpath = [ ...path ];\n\n\twhile ( node && path.length > 1 ) {\n\t\tnode = node.childNodes[ path.shift() ];\n\t}\n\n\treturn {\n\t\tnode,\n\t\toffset: path[ 0 ],\n\t};\n}\n\nfunction append( element, child ) {\n\tif ( child.html !== undefined ) {\n\t\treturn ( element.innerHTML += child.html );\n\t}\n\n\tif ( typeof child === 'string' ) {\n\t\tchild = element.ownerDocument.createTextNode( child );\n\t}\n\n\tconst { type, attributes } = child;\n\n\tif ( type ) {\n\t\tchild = element.ownerDocument.createElement( type );\n\n\t\tfor ( const key in attributes ) {\n\t\t\tchild.setAttribute( key, attributes[ key ] );\n\t\t}\n\t}\n\n\treturn element.appendChild( child );\n}\n\nfunction appendText( node, text ) {\n\tnode.appendData( text );\n}\n\nfunction getLastChild( { lastChild } ) {\n\treturn lastChild;\n}\n\nfunction getParent( { parentNode } ) {\n\treturn parentNode;\n}\n\nfunction isText( node ) {\n\treturn node.nodeType === node.TEXT_NODE;\n}\n\nfunction getText( { nodeValue } ) {\n\treturn nodeValue;\n}\n\nfunction remove( node ) {\n\treturn node.parentNode.removeChild( node );\n}\n\nexport function toDom( {\n\tvalue,\n\tmultilineTag,\n\tprepareEditableTree,\n\tisEditableTree = true,\n\tplaceholder,\n\tdoc = document,\n} ) {\n\tlet startPath = [];\n\tlet endPath = [];\n\n\tif ( prepareEditableTree ) {\n\t\tvalue = {\n\t\t\t...value,\n\t\t\tformats: prepareEditableTree( value ),\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new instance of a DOM tree upon which RichText operations can be\n\t * applied.\n\t *\n\t * Note: The current implementation will return a shared reference, reset on\n\t * each call to `createEmpty`. Therefore, you should not hold a reference to\n\t * the value to operate upon asynchronously, as it may have unexpected results.\n\t *\n\t * @return {Object} RichText tree.\n\t */\n\tconst createEmpty = () => createElement( doc, '' );\n\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t\tonStartIndex( body, pointer ) {\n\t\t\tstartPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tonEndIndex( body, pointer ) {\n\t\t\tendPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tisEditableTree,\n\t\tplaceholder,\n\t} );\n\n\treturn {\n\t\tbody: tree,\n\t\tselection: { startPath, endPath },\n\t};\n}\n\n/**\n * Create an `Element` tree from a Rich Text value and applies the difference to\n * the `Element` tree contained by `current`. If a `multilineTag` is provided,\n * text separated by two new lines will be wrapped in an `Element` of that type.\n *\n * @param {Object}        $1                       Named arguments.\n * @param {RichTextValue} $1.value                 Value to apply.\n * @param {HTMLElement}   $1.current               The live root node to apply the element tree to.\n * @param {string}        [$1.multilineTag]        Multiline tag.\n * @param {Function}      [$1.prepareEditableTree] Function to filter editorable formats.\n * @param {boolean}       [$1.__unstableDomOnly]   Only apply elements, no selection.\n * @param {string}        [$1.placeholder]         Placeholder text.\n */\nexport function apply( {\n\tvalue,\n\tcurrent,\n\tmultilineTag,\n\tprepareEditableTree,\n\t__unstableDomOnly,\n\tplaceholder,\n} ) {\n\t// Construct a new element tree in memory.\n\tconst { body, selection } = toDom( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tprepareEditableTree,\n\t\tplaceholder,\n\t\tdoc: current.ownerDocument,\n\t} );\n\n\tapplyValue( body, current );\n\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\n\t\tapplySelection( selection, current );\n\t}\n}\n\nexport function applyValue( future, current ) {\n\tlet i = 0;\n\tlet futureChild;\n\n\twhile ( ( futureChild = future.firstChild ) ) {\n\t\tconst currentChild = current.childNodes[ i ];\n\n\t\tif ( ! currentChild ) {\n\t\t\tcurrent.appendChild( futureChild );\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\n\t\t\tif (\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\n\t\t\t\t( currentChild.nodeType === currentChild.TEXT_NODE &&\n\t\t\t\t\tcurrentChild.data !== futureChild.data )\n\t\t\t) {\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\n\t\t\t} else {\n\t\t\t\tconst currentAttributes = currentChild.attributes;\n\t\t\t\tconst futureAttributes = futureChild.attributes;\n\n\t\t\t\tif ( currentAttributes ) {\n\t\t\t\t\tlet ii = currentAttributes.length;\n\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\n\t\t\t\t\t// changes `currentAttributes`.\n\t\t\t\t\twhile ( ii-- ) {\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\n\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( futureAttributes ) {\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\n\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tapplyValue( futureChild, currentChild );\n\t\t\t\tfuture.removeChild( futureChild );\n\t\t\t}\n\t\t} else {\n\t\t\tfuture.removeChild( futureChild );\n\t\t}\n\n\t\ti++;\n\t}\n\n\twhile ( current.childNodes[ i ] ) {\n\t\tcurrent.removeChild( current.childNodes[ i ] );\n\t}\n}\n\nexport function applySelection( { startPath, endPath }, current ) {\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tstartPath\n\t);\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tendPath\n\t);\n\tconst { ownerDocument } = current;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\tconst range = ownerDocument.createRange();\n\n\trange.setStart( startContainer, startOffset );\n\trange.setEnd( endContainer, endOffset );\n\n\tconst { activeElement } = ownerDocument;\n\n\tif ( selection.rangeCount > 0 ) {\n\t\t// If the to be added range and the live range are the same, there's no\n\t\t// need to remove the live range and add the equivalent range.\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tselection.removeAllRanges();\n\t}\n\n\tselection.addRange( range );\n\n\t// This function is not intended to cause a shift in focus. Since the above\n\t// selection manipulations may shift focus, ensure that focus is restored to\n\t// its previous state.\n\tif ( activeElement !== ownerDocument.activeElement ) {\n\t\t// The `instanceof` checks protect against edge cases where the focused\n\t\t// element is not of the interface HTMLElement (does not have a `focus`\n\t\t// or `blur` property).\n\t\t//\n\t\t// See: https://github.com/Microsoft/TypeScript/issues/5901#issuecomment-431649653\n\t\tif ( activeElement instanceof defaultView.HTMLElement ) {\n\t\t\tactiveElement.focus();\n\t\t}\n\t}\n}\n","/**\n * WordPress dependencies\n */\n\nimport {\n\tescapeEditableHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Create an HTML string from a Rich Text value. If a `multilineTag` is\n * provided, text separated by a line separator will be wrapped in it.\n *\n * @param {Object}        $1                      Named argements.\n * @param {RichTextValue} $1.value                Rich text value.\n * @param {string}        [$1.multilineTag]       Multiline tag.\n * @param {boolean}       [$1.preserveWhiteSpace] Whether or not to use newline\n *                                                characters for line breaks.\n *\n * @return {string} HTML string.\n */\nexport function toHTMLString( { value, multilineTag, preserveWhiteSpace } ) {\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tpreserveWhiteSpace,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t} );\n\n\treturn createChildrenHTML( tree.children );\n}\n\nfunction createEmpty() {\n\treturn {};\n}\n\nfunction getLastChild( { children } ) {\n\treturn children && children[ children.length - 1 ];\n}\n\nfunction append( parent, object ) {\n\tif ( typeof object === 'string' ) {\n\t\tobject = { text: object };\n\t}\n\n\tobject.parent = parent;\n\tparent.children = parent.children || [];\n\tparent.children.push( object );\n\treturn object;\n}\n\nfunction appendText( object, text ) {\n\tobject.text += text;\n}\n\nfunction getParent( { parent } ) {\n\treturn parent;\n}\n\nfunction isText( { text } ) {\n\treturn typeof text === 'string';\n}\n\nfunction getText( { text } ) {\n\treturn text;\n}\n\nfunction remove( object ) {\n\tconst index = object.parent.children.indexOf( object );\n\n\tif ( index !== -1 ) {\n\t\tobject.parent.children.splice( index, 1 );\n\t}\n\n\treturn object;\n}\n\nfunction createElementHTML( { type, attributes, object, children } ) {\n\tlet attributeString = '';\n\n\tfor ( const key in attributes ) {\n\t\tif ( ! isValidAttributeName( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tattributeString += ` ${ key }=\"${ escapeAttribute(\n\t\t\tattributes[ key ]\n\t\t) }\"`;\n\t}\n\n\tif ( object ) {\n\t\treturn `<${ type }${ attributeString }>`;\n\t}\n\n\treturn `<${ type }${ attributeString }>${ createChildrenHTML(\n\t\tchildren\n\t) }</${ type }>`;\n}\n\nfunction createChildrenHTML( children = [] ) {\n\treturn children\n\t\t.map( ( child ) => {\n\t\t\tif ( child.html !== undefined ) {\n\t\t\t\treturn child.html;\n\t\t\t}\n\n\t\t\treturn child.text === undefined\n\t\t\t\t? createElementHTML( child )\n\t\t\t\t: escapeEditableHTML( child.text );\n\t\t} )\n\t\t.join( '' );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\nimport { getFormatType } from './get-format-type';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\nfunction restoreOnAttributes( attributes, isEditableTree ) {\n\tif ( isEditableTree ) {\n\t\treturn attributes;\n\t}\n\n\tconst newAttributes = {};\n\n\tfor ( const key in attributes ) {\n\t\tlet newKey = key;\n\t\tif ( key.startsWith( 'data-disable-rich-text-' ) ) {\n\t\t\tnewKey = key.slice( 'data-disable-rich-text-'.length );\n\t\t}\n\n\t\tnewAttributes[ newKey ] = attributes[ key ];\n\t}\n\n\treturn newAttributes;\n}\n\n/**\n * Converts a format object to information that can be used to create an element\n * from (type, attributes and object).\n *\n * @param {Object}  $1                        Named parameters.\n * @param {string}  $1.type                   The format type.\n * @param {string}  $1.tagName                The tag name.\n * @param {Object}  $1.attributes             The format attributes.\n * @param {Object}  $1.unregisteredAttributes The unregistered format\n *                                            attributes.\n * @param {boolean} $1.object                 Whether or not it is an object\n *                                            format.\n * @param {boolean} $1.boundaryClass          Whether or not to apply a boundary\n *                                            class.\n * @param {boolean} $1.isEditableTree\n *\n * @return {Object} Information to be used for element creation.\n */\nfunction fromFormat( {\n\ttype,\n\ttagName,\n\tattributes,\n\tunregisteredAttributes,\n\tobject,\n\tboundaryClass,\n\tisEditableTree,\n} ) {\n\tconst formatType = getFormatType( type );\n\n\tlet elementAttributes = {};\n\n\tif ( boundaryClass && isEditableTree ) {\n\t\telementAttributes[ 'data-rich-text-format-boundary' ] = 'true';\n\t}\n\n\tif ( ! formatType ) {\n\t\tif ( attributes ) {\n\t\t\telementAttributes = { ...attributes, ...elementAttributes };\n\t\t}\n\n\t\treturn {\n\t\t\ttype,\n\t\t\tattributes: restoreOnAttributes(\n\t\t\t\telementAttributes,\n\t\t\t\tisEditableTree\n\t\t\t),\n\t\t\tobject,\n\t\t};\n\t}\n\n\telementAttributes = { ...unregisteredAttributes, ...elementAttributes };\n\n\tfor ( const name in attributes ) {\n\t\tconst key = formatType.attributes\n\t\t\t? formatType.attributes[ name ]\n\t\t\t: false;\n\n\t\tif ( key ) {\n\t\t\telementAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\telementAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\tif ( formatType.className ) {\n\t\tif ( elementAttributes.class ) {\n\t\t\telementAttributes.class = `${ formatType.className } ${ elementAttributes.class }`;\n\t\t} else {\n\t\t\telementAttributes.class = formatType.className;\n\t\t}\n\t}\n\n\t// When a format is declared as non editable, make it non editable in the\n\t// editor.\n\tif ( isEditableTree && formatType.contentEditable === false ) {\n\t\telementAttributes.contenteditable = 'false';\n\t}\n\n\treturn {\n\t\ttype: tagName || formatType.tagName,\n\t\tobject: formatType.object,\n\t\tattributes: restoreOnAttributes( elementAttributes, isEditableTree ),\n\t};\n}\n\n/**\n * Checks if both arrays of formats up until a certain index are equal.\n *\n * @param {Array}  a     Array of formats to compare.\n * @param {Array}  b     Array of formats to compare.\n * @param {number} index Index to check until.\n */\nfunction isEqualUntil( a, b, index ) {\n\tdo {\n\t\tif ( a[ index ] !== b[ index ] ) {\n\t\t\treturn false;\n\t\t}\n\t} while ( index-- );\n\n\treturn true;\n}\n\nexport function toTree( {\n\tvalue,\n\tmultilineTag,\n\tpreserveWhiteSpace,\n\tcreateEmpty,\n\tappend,\n\tgetLastChild,\n\tgetParent,\n\tisText,\n\tgetText,\n\tremove,\n\tappendText,\n\tonStartIndex,\n\tonEndIndex,\n\tisEditableTree,\n\tplaceholder,\n} ) {\n\tconst { formats, replacements, text, start, end } = value;\n\tconst formatsLength = formats.length + 1;\n\tconst tree = createEmpty();\n\tconst multilineFormat = { type: multilineTag };\n\tconst activeFormats = getActiveFormats( value );\n\tconst deepestActiveFormat = activeFormats[ activeFormats.length - 1 ];\n\n\tlet lastSeparatorFormats;\n\tlet lastCharacterFormats;\n\tlet lastCharacter;\n\n\t// If we're building a multiline tree, start off with a multiline element.\n\tif ( multilineTag ) {\n\t\tappend( append( tree, { type: multilineTag } ), '' );\n\t\tlastCharacterFormats = lastSeparatorFormats = [ multilineFormat ];\n\t} else {\n\t\tappend( tree, '' );\n\t}\n\n\tfor ( let i = 0; i < formatsLength; i++ ) {\n\t\tconst character = text.charAt( i );\n\t\tconst shouldInsertPadding =\n\t\t\tisEditableTree &&\n\t\t\t// Pad the line if the line is empty.\n\t\t\t( ! lastCharacter ||\n\t\t\t\tlastCharacter === LINE_SEPARATOR ||\n\t\t\t\t// Pad the line if the previous character is a line break, otherwise\n\t\t\t\t// the line break won't be visible.\n\t\t\t\tlastCharacter === '\\n' );\n\n\t\tlet characterFormats = formats[ i ];\n\n\t\t// Set multiline tags in queue for building the tree.\n\t\tif ( multilineTag ) {\n\t\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\t\tcharacterFormats = lastSeparatorFormats = (\n\t\t\t\t\treplacements[ i ] || []\n\t\t\t\t).reduce(\n\t\t\t\t\t( accumulator, format ) => {\n\t\t\t\t\t\taccumulator.push( format, multilineFormat );\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t},\n\t\t\t\t\t[ multilineFormat ]\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcharacterFormats = [\n\t\t\t\t\t...lastSeparatorFormats,\n\t\t\t\t\t...( characterFormats || [] ),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tlet pointer = getLastChild( tree );\n\n\t\tif ( shouldInsertPadding && character === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tappend( getParent( node ), ZWNBSP );\n\t\t}\n\n\t\t// Set selection for the start of line.\n\t\tif ( lastCharacter === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tif ( onStartIndex && start === i ) {\n\t\t\t\tonStartIndex( tree, node );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === i ) {\n\t\t\t\tonEndIndex( tree, node );\n\t\t\t}\n\t\t}\n\n\t\tif ( characterFormats ) {\n\t\t\tcharacterFormats.forEach( ( format, formatIndex ) => {\n\t\t\t\tif (\n\t\t\t\t\tpointer &&\n\t\t\t\t\tlastCharacterFormats &&\n\t\t\t\t\t// Reuse the last element if all formats remain the same.\n\t\t\t\t\tisEqualUntil(\n\t\t\t\t\t\tcharacterFormats,\n\t\t\t\t\t\tlastCharacterFormats,\n\t\t\t\t\t\tformatIndex\n\t\t\t\t\t) &&\n\t\t\t\t\t// Do not reuse the last element if the character is a\n\t\t\t\t\t// line separator.\n\t\t\t\t\t( character !== LINE_SEPARATOR ||\n\t\t\t\t\t\tcharacterFormats.length - 1 !== formatIndex )\n\t\t\t\t) {\n\t\t\t\t\tpointer = getLastChild( pointer );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { type, tagName, attributes, unregisteredAttributes } =\n\t\t\t\t\tformat;\n\n\t\t\t\tconst boundaryClass =\n\t\t\t\t\tisEditableTree &&\n\t\t\t\t\tcharacter !== LINE_SEPARATOR &&\n\t\t\t\t\tformat === deepestActiveFormat;\n\n\t\t\t\tconst parent = getParent( pointer );\n\t\t\t\tconst newNode = append(\n\t\t\t\t\tparent,\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\ttagName,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tunregisteredAttributes,\n\t\t\t\t\t\tboundaryClass,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( isText( pointer ) && getText( pointer ).length === 0 ) {\n\t\t\t\t\tremove( pointer );\n\t\t\t\t}\n\n\t\t\t\tpointer = append( newNode, '' );\n\t\t\t} );\n\t\t}\n\n\t\t// No need for further processing if the character is a line separator.\n\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\tlastCharacterFormats = characterFormats;\n\t\t\tlastCharacter = character;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If there is selection at 0, handle it before characters are inserted.\n\t\tif ( i === 0 ) {\n\t\t\tif ( onStartIndex && start === 0 ) {\n\t\t\t\tonStartIndex( tree, pointer );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === 0 ) {\n\t\t\t\tonEndIndex( tree, pointer );\n\t\t\t}\n\t\t}\n\n\t\tif ( character === OBJECT_REPLACEMENT_CHARACTER ) {\n\t\t\tconst replacement = replacements[ i ];\n\t\t\tif ( ! replacement ) continue;\n\t\t\tconst { type, attributes, innerHTML } = replacement;\n\t\t\tconst formatType = getFormatType( type );\n\n\t\t\tif ( ! isEditableTree && type === 'script' ) {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype: 'script',\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t\tappend( pointer, {\n\t\t\t\t\thtml: decodeURIComponent(\n\t\t\t\t\t\tattributes[ 'data-rich-text-script' ]\n\t\t\t\t\t),\n\t\t\t\t} );\n\t\t\t} else if ( formatType?.contentEditable === false ) {\n\t\t\t\t// For non editable formats, render the stored inner HTML.\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\t...replacement,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t\tboundaryClass: start === i && end === i + 1,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( innerHTML ) {\n\t\t\t\t\tappend( pointer, {\n\t\t\t\t\t\thtml: innerHTML,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\t...replacement,\n\t\t\t\t\t\tobject: true,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! preserveWhiteSpace && character === '\\n' ) {\n\t\t\tpointer = append( getParent( pointer ), {\n\t\t\t\ttype: 'br',\n\t\t\t\tattributes: isEditableTree\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'data-rich-text-line-break': 'true',\n\t\t\t\t\t  }\n\t\t\t\t\t: undefined,\n\t\t\t\tobject: true,\n\t\t\t} );\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! isText( pointer ) ) {\n\t\t\tpointer = append( getParent( pointer ), character );\n\t\t} else {\n\t\t\tappendText( pointer, character );\n\t\t}\n\n\t\tif ( onStartIndex && start === i + 1 ) {\n\t\t\tonStartIndex( tree, pointer );\n\t\t}\n\n\t\tif ( onEndIndex && end === i + 1 ) {\n\t\t\tonEndIndex( tree, pointer );\n\t\t}\n\n\t\tif ( shouldInsertPadding && i === text.length ) {\n\t\t\tappend( getParent( pointer ), ZWNBSP );\n\n\t\t\tif ( placeholder && text.length === 0 ) {\n\t\t\t\tappend( getParent( pointer ), {\n\t\t\t\t\ttype: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-rich-text-placeholder': placeholder,\n\t\t\t\t\t\t// Necessary to prevent the placeholder from catching\n\t\t\t\t\t\t// selection. The placeholder is also not editable after\n\t\t\t\t\t\t// all.\n\t\t\t\t\t\tcontenteditable: 'false',\n\t\t\t\t\t\tstyle: 'pointer-events:none;user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;',\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tlastCharacterFormats = characterFormats;\n\t\tlastCharacter = character;\n\t}\n\n\treturn tree;\n}\n","/**\n * WordPress dependencies\n */\n\nimport { speak } from '@wordpress/a11y';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\n\nimport { getActiveFormat } from './get-active-format';\nimport { removeFormat } from './remove-format';\nimport { applyFormat } from './apply-format';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Toggles a format object to a Rich Text value at the current selection.\n *\n * @param {RichTextValue}  value  Value to modify.\n * @param {RichTextFormat} format Format to apply or remove.\n *\n * @return {RichTextValue} A new value with the format applied or removed.\n */\nexport function toggleFormat( value, format ) {\n\tif ( getActiveFormat( value, format.type ) ) {\n\t\t// For screen readers, will announce if formatting control is disabled.\n\t\tif ( format.title ) {\n\t\t\t// translators: %s: title of the formatting control\n\t\t\tspeak( sprintf( __( '%s removed.' ), format.title ), 'assertive' );\n\t\t}\n\t\treturn removeFormat( value, format.type );\n\t}\n\t// For screen readers, will announce if formatting control is enabled.\n\tif ( format.title ) {\n\t\t// translators: %s: title of the formatting control\n\t\tspeak( sprintf( __( '%s applied.' ), format.title ), 'assertive' );\n\t}\n\treturn applyFormat( value, format );\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').WPFormat} WPFormat */\n\n/**\n * Unregisters a format.\n *\n * @param {string} name Format name.\n *\n * @return {WPFormat|undefined} The previous format value, if it has\n *                                        been successfully unregistered;\n *                                        otherwise `undefined`.\n */\nexport function unregisterFormatType( name ) {\n\tconst oldFormat = select( richTextStore ).getFormatType( name );\n\n\tif ( ! oldFormat ) {\n\t\twindow.console.error( `Format ${ name } is not registered.` );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).removeFormatTypes( name );\n\n\treturn oldFormat;\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Efficiently updates all the formats from `start` (including) until `end`\n * (excluding) with the active formats. Mutates `value`.\n *\n * @param {Object}        $1         Named paramentes.\n * @param {RichTextValue} $1.value   Value te update.\n * @param {number}        $1.start   Index to update from.\n * @param {number}        $1.end     Index to update until.\n * @param {Array}         $1.formats Replacement formats.\n *\n * @return {RichTextValue} Mutated value.\n */\nexport function updateFormats( { value, start, end, formats } ) {\n\t// Start and end may be switched in case of delete.\n\tconst min = Math.min( start, end );\n\tconst max = Math.max( start, end );\n\tconst formatsBefore = value.formats[ min - 1 ] || [];\n\tconst formatsAfter = value.formats[ max ] || [];\n\n\t// First, fix the references. If any format right before or after are\n\t// equal, the replacement format should use the same reference.\n\tvalue.activeFormats = formats.map( ( format, index ) => {\n\t\tif ( formatsBefore[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsBefore[ index ] ) ) {\n\t\t\t\treturn formatsBefore[ index ];\n\t\t\t}\n\t\t} else if ( formatsAfter[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsAfter[ index ] ) ) {\n\t\t\t\treturn formatsAfter[ index ];\n\t\t\t}\n\t\t}\n\n\t\treturn format;\n\t} );\n\n\twhile ( --end >= start ) {\n\t\tif ( value.activeFormats.length > 0 ) {\n\t\t\tvalue.formats[ end ] = value.activeFormats;\n\t\t} else {\n\t\t\tdelete value.formats[ end ];\n\t\t}\n\t}\n\n\treturn value;\n}\n","module.exports = window[\"wp\"][\"a11y\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"deprecated\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"escapeHtml\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"keycodes\"];","'use strict';\n\n/** @typedef {(...args: any[]) => *[]} GetDependants */\n\n/** @typedef {() => void} Clear */\n\n/**\n * @typedef {{\n *   getDependants: GetDependants,\n *   clear: Clear\n * }} EnhancedSelector\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef CacheNode\n *\n * @property {?CacheNode|undefined} [prev] Previous node.\n * @property {?CacheNode|undefined} [next] Next node.\n * @property {*[]} args Function arguments for cache entry.\n * @property {*} val Function result.\n */\n\n/**\n * @typedef Cache\n *\n * @property {Clear} clear Function to clear cache.\n * @property {boolean} [isUniqueByDependants] Whether dependants are valid in\n * considering cache uniqueness. A cache is unique if dependents are all arrays\n * or objects.\n * @property {CacheNode?} [head] Cache head.\n * @property {*[]} [lastDependants] Dependants from previous invocation.\n */\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {{}}\n */\nvar LEAF_KEY = {};\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @template T\n *\n * @param {T} value Value to return.\n *\n * @return {[T]} Value returned as entry in array.\n */\nfunction arrayOf(value) {\n\treturn [value];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike(value) {\n\treturn !!value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Cache} Cache object.\n */\nfunction createCache() {\n\t/** @type {Cache} */\n\tvar cache = {\n\t\tclear: function () {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {*[]} a First array.\n * @param {*[]} b Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual(a, b, fromIndex) {\n\tvar i;\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\tfor (i = fromIndex; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @template {(...args: *[]) => *} S\n *\n * @param {S} selector Selector function.\n * @param {GetDependants=} getDependants Dependant getter returning an array of\n * references used in cache bust consideration.\n */\nexport default function (selector, getDependants) {\n\t/** @type {WeakMap<*,*>} */\n\tvar rootCache;\n\n\t/** @type {GetDependants} */\n\tvar normalizedGetDependants = getDependants ? getDependants : arrayOf;\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {*[]} dependants Selector dependants.\n\t *\n\t * @return {Cache} Cache object.\n\t */\n\tfunction getCache(dependants) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti,\n\t\t\tdependant,\n\t\t\tmap,\n\t\t\tcache;\n\n\t\tfor (i = 0; i < dependants.length; i++) {\n\t\t\tdependant = dependants[i];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif (!isObjectLike(dependant)) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif (caches.has(dependant)) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get(dependant);\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set(dependant, map);\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif (!caches.has(LEAF_KEY)) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set(LEAF_KEY, cache);\n\t\t}\n\n\t\treturn caches.get(LEAF_KEY);\n\t}\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = new WeakMap();\n\t}\n\n\t/* eslint-disable jsdoc/check-param-names */\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {*}    source    Source object for derivation.\n\t * @param {...*} extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\t/* eslint-enable jsdoc/check-param-names */\n\tfunction callSelector(/* source, ...extraArgs */) {\n\t\tvar len = arguments.length,\n\t\t\tcache,\n\t\t\tnode,\n\t\t\ti,\n\t\t\targs,\n\t\t\tdependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tdependants = normalizedGetDependants.apply(null, args);\n\t\tcache = getCache(dependants);\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type), shallow\n\t\t// compare against last dependants and, if references have changed,\n\t\t// destroy cache to recalculate result.\n\t\tif (!cache.isUniqueByDependants) {\n\t\t\tif (\n\t\t\t\tcache.lastDependants &&\n\t\t\t\t!isShallowEqual(dependants, cache.lastDependants, 0)\n\t\t\t) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile (node) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif (!isShallowEqual(node.args, args, 1)) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== cache.head) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\t/** @type {CacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {CacheNode} */ (cache.head).prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = /** @type {CacheNode} */ ({\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply(null, args),\n\t\t});\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[0] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (cache.head) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = normalizedGetDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn /** @type {S & EnhancedSelector} */ (callSelector);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { store } from './store';\nexport { applyFormat } from './apply-format';\nexport { concat } from './concat';\nexport { create } from './create';\nexport { getActiveFormat } from './get-active-format';\nexport { getActiveFormats } from './get-active-formats';\nexport { getActiveObject } from './get-active-object';\nexport { getTextContent } from './get-text-content';\nexport { isCollapsed } from './is-collapsed';\nexport { isEmpty, isEmptyLine as __unstableIsEmptyLine } from './is-empty';\nexport { join } from './join';\nexport { registerFormatType } from './register-format-type';\nexport { removeFormat } from './remove-format';\nexport { remove } from './remove';\nexport { replace } from './replace';\nexport { insert } from './insert';\nexport { insertLineSeparator as __unstableInsertLineSeparator } from './insert-line-separator';\nexport { insertObject } from './insert-object';\nexport { slice } from './slice';\nexport { split } from './split';\nexport { toDom as __unstableToDom } from './to-dom';\nexport { toHTMLString } from './to-html-string';\nexport { toggleFormat } from './toggle-format';\nexport { LINE_SEPARATOR as __UNSTABLE_LINE_SEPARATOR } from './special-characters';\nexport { unregisterFormatType } from './unregister-format-type';\nexport { createElement as __unstableCreateElement } from './create-element';\n\nexport { useAnchorRef } from './component/use-anchor-ref';\nexport { useAnchor } from './component/use-anchor';\n\nexport {\n\tdefault as __experimentalRichText,\n\tuseRichText as __unstableUseRichText,\n} from './component';\nexport { default as __unstableFormatEdit } from './component/format-edit';\n\n/**\n * An object which represents a formatted string. See main `@wordpress/rich-text`\n * documentation for more information.\n */\nexport type { RichTextValue } from './types';\n"],"names":["normaliseFormats","replace","array","index","value","slice","applyFormat","format","startIndex","start","endIndex","end","formats","activeFormats","newFormats","startFormat","find","type","indexOf","position","Infinity","filter","length","splice","getActiveFormat","getActiveObject","FormatEdit","formatTypes","onChange","onFocus","forwardedRef","map","settings","name","edit","Edit","activeFormat","isActive","undefined","activeObject","isObjectActive","attributes","useRef","useLayoutEffect","useReducer","useMergeRefs","useRefEffect","useRegistry","create","apply","toHTMLString","useDefaultStyle","useBoundaryStyle","useCopyHandler","useFormatBoundaries","useSelectObject","useInputAndSelection","useSelectionChangeCompat","useDelete","useRichText","selectionStart","selectionEnd","placeholder","preserveWhiteSpace","onSelectionChange","__unstableMultilineTag","multilineTag","__unstableDisableFormats","disableFormats","__unstableIsSelected","isSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","registry","forceRender","ref","createRecord","ownerDocument","defaultView","current","selection","getSelection","range","rangeCount","getRangeAt","element","multilineWrapperTags","__unstableIsEditableTree","applyRecord","newRecord","domOnly","prepareEditableTree","__unstableDomOnly","_value","record","setRecordFromProps","html","Array","replacements","hadSelectionUpdate","hasRelevantInitFormat","handleChangesUponInit","handleChange","text","batch","__unstableFormats","__unstableText","applyFromProps","didMount","activeElement","focus","mergedRefs","getValue","__experimentalRichText","useMemo","deprecated","useAnchorRef","since","alternative","tagName","className","startContainer","nextElementSibling","nodeType","ELEMENT_NODE","parentNode","closest","useState","getFormatElement","editableContentElement","parentElement","contains","selector","matches","createVirtualAnchorElement","getBoundingClientRect","getAnchor","formatElement","useAnchor","anchor","setAnchor","callback","attach","addEventListener","detach","removeEventListener","useEffect","activeReplacement","boundarySelector","querySelector","computedStyle","getComputedStyle","newColor","color","rule","style","globalStyleId","globalStyle","getElementById","createElement","id","head","appendChild","innerHTML","isCollapsed","getTextContent","props","propsRef","onCopy","event","selectedRecord","plainText","clipboardData","setData","preventDefault","execCommand","useCallback","whiteSpace","minWidth","BACKSPACE","DELETE","remove","removeLineSeparator","isEmptyLine","onKeyDown","keyCode","defaultPrevented","currentValue","isReverse","newValue","LEFT","RIGHT","EMPTY_ACTIVE_FORMATS","shiftKey","altKey","metaKey","ctrlKey","currentActiveFormats","collapsed","direction","reverseKey","formatsBefore","formatsAfter","destination","isIncreasing","every","newActiveFormatsLength","_newActiveFormats","origin","source","newActiveFormats","getActiveFormats","updateFormats","INSERTION_INPUT_TYPES_TO_IGNORE","Set","PLACEHOLDER_ATTR_NAME","fixPlaceholderSelection","anchorNode","anchorOffset","targetNode","childNodes","hasAttribute","collapseToStart","isComposing","onInput","inputType","has","oldActiveFormats","change","handleSelectionChange","contentEditable","focusNode","offset","oldRecord","onCompositionStart","onCompositionEnd","onClick","target","textContent","isContentEditable","containsNode","createRange","nodeToSelect","selectNode","removeAllRanges","addRange","onFocusIn","relatedTarget","isRangeEqual","getRange","onDown","onCancel","onUp","dispatchEvent","Event","mergePair","a","b","concat","values","reduce","implementation","body","createHTMLDocument","select","store","richTextStore","LINE_SEPARATOR","OBJECT_REPLACEMENT_CHARACTER","ZWNBSP","createEmptyValue","toFormat","formatType","class","getFormatTypeForClassName","trim","getFormatTypeForBareElement","__experimentalCreatePrepareEditableTree","__experimentalCreateOnChangeEditableValue","registeredAttributes","unregisteredAttributes","_attributes","key","__unstableFilterAttributeValue","contenteditable","isEditableTree","document","createFromElement","createFromMultilineElement","accumulateSelection","accumulator","node","startOffset","endContainer","endOffset","currentLength","TEXT_NODE","filterRange","nodeValue","collapseWhiteSpace","string","removeReservedCharacters","RegExp","currentWrapperTags","hasChildNodes","nodeName","toLowerCase","getAttribute","encodeURIComponent","getAttributes","mergeFormats","from","children","hasAttributes","i","safeName","test","isFormatEqual","selectedFormats","_activeFormats","formatsAtIndex","ii","_format","getFormatType","pattern","c","insert","insertLineSeparator","beforeText","previousLineSeparatorIndex","lastIndexOf","previousLineSeparatorFormats","valueToInsert","insertObject","formatToInsert","isEmpty","format1","format2","attributes1","attributes2","keys1","Object","keys","keys2","join","separator","accumlator","forEach","formatsAtPreviousIndex","newFormatsAtIndex","formatIndex","previousFormat","dispatch","registerFormatType","window","console","error","formatTypeForBareElement","formatTypeForClassName","title","keywords","addFormatTypes","removeFormat","newFormat","filterFormats","backward","removeStart","removeEnd","newReplacements","replacement","match","rest","newText","fill","split","splitAtSelection","arguments","nextStart","substring","before","after","isArray","removeFormatTypes","names","createReduxStore","register","reducer","selectors","actions","STORE_NAME","combineReducers","state","action","newFormatTypes","fromEntries","entries","includes","createSelector","getFormatTypes","bareElementTagName","elementClassName","toTree","createPathToNode","rootNode","path","previousSibling","getNodeByPath","shift","append","child","createTextNode","setAttribute","appendText","appendData","getLastChild","lastChild","getParent","isText","getText","removeChild","toDom","doc","startPath","endPath","createEmpty","tree","onStartIndex","pointer","onEndIndex","applyValue","applySelection","future","futureChild","firstChild","currentChild","isEqualNode","data","replaceChild","currentAttributes","futureAttributes","removeAttribute","setStart","setEnd","HTMLElement","escapeEditableHTML","escapeAttribute","isValidAttributeName","createChildrenHTML","parent","object","push","createElementHTML","attributeString","restoreOnAttributes","newAttributes","newKey","startsWith","fromFormat","boundaryClass","elementAttributes","isEqualUntil","formatsLength","multilineFormat","deepestActiveFormat","lastSeparatorFormats","lastCharacterFormats","lastCharacter","character","charAt","shouldInsertPadding","characterFormats","newNode","decodeURIComponent","speak","__","sprintf","toggleFormat","unregisterFormatType","oldFormat","min","Math","max","__unstableIsEmptyLine","__unstableInsertLineSeparator","__unstableToDom","__UNSTABLE_LINE_SEPARATOR","__unstableCreateElement","default","__unstableUseRichText","__unstableFormatEdit"],"sourceRoot":""}